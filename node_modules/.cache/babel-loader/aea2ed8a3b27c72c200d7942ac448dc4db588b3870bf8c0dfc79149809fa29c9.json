{"ast":null,"code":"// Composables\nimport { VItemGroupSymbol } from \"./VItemGroup.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\"; // Utilities\nimport { genericComponent } from \"../../util/index.mjs\";\nexport var VItem = genericComponent()({\n  name: 'VItem',\n  props: makeGroupItemProps(),\n  emits: {\n    'group:selected': function groupSelected(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useGroupItem = useGroupItem(props, VItemGroupSymbol),\n      isSelected = _useGroupItem.isSelected,\n      select = _useGroupItem.select,\n      toggle = _useGroupItem.toggle,\n      selectedClass = _useGroupItem.selectedClass,\n      value = _useGroupItem.value,\n      disabled = _useGroupItem.disabled;\n    return function () {\n      var _slots$default;\n      return (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, {\n        isSelected: isSelected.value,\n        selectedClass: selectedClass.value,\n        select: select,\n        toggle: toggle,\n        value: value.value,\n        disabled: disabled.value\n      });\n    };\n  }\n});","map":{"version":3,"names":["VItemGroupSymbol","makeGroupItemProps","useGroupItem","genericComponent","VItem","name","props","emits","groupSelected","val","setup","_ref","slots","_useGroupItem","isSelected","select","toggle","selectedClass","value","disabled","_slots$default","call"],"sources":["../../../src/components/VItemGroup/VItem.tsx"],"sourcesContent":["// Composables\nimport { VItemGroupSymbol } from './VItemGroup'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\ntype VItemSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean | undefined\n  }\n}\n\nexport const VItem = genericComponent<VItemSlots>()({\n  name: 'VItem',\n\n  props: makeGroupItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, select, toggle, selectedClass, value, disabled } = useGroupItem(props, VItemGroupSymbol)\n    return () => slots.default?.({\n      isSelected: isSelected.value,\n      selectedClass: selectedClass.value,\n      select,\n      toggle,\n      value: value.value,\n      disabled: disabled.value,\n    })\n  },\n})\n\nexport type VItem = InstanceType<typeof VItem>\n"],"mappings":"AAAA;AAAA,SACSA,gBAAgB;AAAA,SAChBC,kBAAkB,EAAEC,YAAY,uCAEzC;AAAA,SACSC,gBAAgB;AAazB,OAAO,IAAMC,KAAK,GAAGD,gBAAgB,CAAa,CAAC,CAAC;EAClDE,IAAI,EAAE,OAAO;EAEbC,KAAK,EAAEL,kBAAkB,CAAC,CAAC;EAE3BM,KAAK,EAAE;IACL,gBAAgB,EAAG,SAAAC,cAAAC,GAAuB;MAAA,OAAK;IAAA;EACjD,CAAC;EAEDC,KAAK,WAAAA,MAAEJ,KAAK,EAAAK,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAAC,aAAA,GAAuEX,YAAY,CAACI,KAAK,EAAEN,gBAAgB,CAAC;MAApGc,UAAU,GAAAD,aAAA,CAAVC,UAAU;MAAEC,MAAM,GAAAF,aAAA,CAANE,MAAM;MAAEC,MAAM,GAAAH,aAAA,CAANG,MAAM;MAAEC,aAAa,GAAAJ,aAAA,CAAbI,aAAa;MAAEC,KAAK,GAAAL,aAAA,CAALK,KAAK;MAAEC,QAAA,GAAAN,aAAA,CAAAM,QAAA;IAC1D,OAAO;MAAA,IAAAC,cAAA;MAAA,QAAAA,cAAA,GAAMR,KAAK,WAAQ,cAAAQ,cAAA,uBAAbA,cAAA,CAAAC,IAAA,CAAAT,KAAK,EAAW;QAC3BE,UAAU,EAAEA,UAAU,CAACI,KAAK;QAC5BD,aAAa,EAAEA,aAAa,CAACC,KAAK;QAClCH,MAAM,EAANA,MAAM;QACNC,MAAM,EAANA,MAAM;QACNE,KAAK,EAAEA,KAAK,CAACA,KAAK;QAClBC,QAAQ,EAAEA,QAAQ,CAACD;MACrB,CAAC,CAAC;IAAA;EACJ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}