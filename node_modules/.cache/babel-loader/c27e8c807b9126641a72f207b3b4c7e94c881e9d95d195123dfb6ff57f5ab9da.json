{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { mergeProps as _mergeProps, resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VDataTableGroupHeaderRow } from \"./VDataTableGroupHeaderRow.mjs\";\nimport { VDataTableRow } from \"./VDataTableRow.mjs\"; // Composables\nimport { useExpanded } from \"./composables/expand.mjs\";\nimport { useGroupBy } from \"./composables/group.mjs\";\nimport { useHeaders } from \"./composables/headers.mjs\";\nimport { useSelection } from \"./composables/select.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\"; // Utilities\nimport { Fragment, mergeProps } from 'vue';\nimport { genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVDataTableRowsProps = propsFactory({\n  loading: [Boolean, String],\n  loadingText: {\n    type: String,\n    \"default\": '$vuetify.dataIterator.loadingText'\n  },\n  hideNoData: Boolean,\n  items: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  noDataText: {\n    type: String,\n    \"default\": '$vuetify.noDataText'\n  },\n  rowProps: [Object, Function],\n  cellProps: [Object, Function]\n}, 'VDataTableRows');\nexport var VDataTableRows = genericComponent()({\n  name: 'VDataTableRows',\n  inheritAttrs: false,\n  props: makeVDataTableRowsProps(),\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      slots = _ref.slots;\n    var _useHeaders = useHeaders(),\n      columns = _useHeaders.columns;\n    var _useExpanded = useExpanded(),\n      expandOnClick = _useExpanded.expandOnClick,\n      toggleExpand = _useExpanded.toggleExpand,\n      isExpanded = _useExpanded.isExpanded;\n    var _useSelection = useSelection(),\n      isSelected = _useSelection.isSelected,\n      toggleSelect = _useSelection.toggleSelect;\n    var _useGroupBy = useGroupBy(),\n      toggleGroup = _useGroupBy.toggleGroup,\n      isGroupOpen = _useGroupBy.isGroupOpen;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    useRender(function () {\n      if (props.loading && (!props.items.length || slots.loading)) {\n        var _slots$loading, _slots$loading2;\n        return _createVNode(\"tr\", {\n          \"class\": \"v-data-table-rows-loading\",\n          \"key\": \"loading\"\n        }, [_createVNode(\"td\", {\n          \"colspan\": columns.value.length\n        }, [(_slots$loading = (_slots$loading2 = slots.loading) === null || _slots$loading2 === void 0 ? void 0 : _slots$loading2.call(slots)) !== null && _slots$loading !== void 0 ? _slots$loading : t(props.loadingText)])]);\n      }\n      if (!props.loading && !props.items.length && !props.hideNoData) {\n        var _slots$noData, _slots$noData2;\n        return _createVNode(\"tr\", {\n          \"class\": \"v-data-table-rows-no-data\",\n          \"key\": \"no-data\"\n        }, [_createVNode(\"td\", {\n          \"colspan\": columns.value.length\n        }, [(_slots$noData = (_slots$noData2 = slots['no-data']) === null || _slots$noData2 === void 0 ? void 0 : _slots$noData2.call(slots)) !== null && _slots$noData !== void 0 ? _slots$noData : t(props.noDataText)])]);\n      }\n      return _createVNode(_Fragment, null, [props.items.map(function (item, index) {\n        var _item$key, _slots$expandedRow;\n        if (item.type === 'group') {\n          var _slotProps = {\n            index: index,\n            item: item,\n            columns: columns.value,\n            isExpanded: isExpanded,\n            toggleExpand: toggleExpand,\n            isSelected: isSelected,\n            toggleSelect: toggleSelect,\n            toggleGroup: toggleGroup,\n            isGroupOpen: isGroupOpen\n          };\n          return slots['group-header'] ? slots['group-header'](_slotProps) : _createVNode(VDataTableGroupHeaderRow, _mergeProps({\n            \"key\": \"group-header_\".concat(item.id),\n            \"item\": item\n          }, getPrefixedEventHandlers(attrs, ':group-header', function () {\n            return _slotProps;\n          })), slots);\n        }\n        var slotProps = {\n          index: index,\n          item: item.raw,\n          internalItem: item,\n          columns: columns.value,\n          isExpanded: isExpanded,\n          toggleExpand: toggleExpand,\n          isSelected: isSelected,\n          toggleSelect: toggleSelect\n        };\n        var itemSlotProps = _objectSpread(_objectSpread({}, slotProps), {}, {\n          props: mergeProps({\n            key: \"item_\".concat((_item$key = item.key) !== null && _item$key !== void 0 ? _item$key : item.index),\n            onClick: expandOnClick.value ? function () {\n              toggleExpand(item);\n            } : undefined,\n            index: index,\n            item: item,\n            cellProps: props.cellProps\n          }, getPrefixedEventHandlers(attrs, ':row', function () {\n            return slotProps;\n          }), typeof props.rowProps === 'function' ? props.rowProps({\n            item: slotProps.item,\n            index: slotProps.index,\n            internalItem: slotProps.internalItem\n          }) : props.rowProps)\n        });\n        return _createVNode(_Fragment, {\n          \"key\": itemSlotProps.props.key\n        }, [slots.item ? slots.item(itemSlotProps) : _createVNode(VDataTableRow, itemSlotProps.props, slots), isExpanded(item) && ((_slots$expandedRow = slots['expanded-row']) === null || _slots$expandedRow === void 0 ? void 0 : _slots$expandedRow.call(slots, slotProps))]);\n      })]);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VDataTableGroupHeaderRow","VDataTableRow","useExpanded","useGroupBy","useHeaders","useSelection","useLocale","Fragment","mergeProps","genericComponent","getPrefixedEventHandlers","propsFactory","useRender","makeVDataTableRowsProps","loading","Boolean","String","loadingText","type","hideNoData","items","Array","_default","noDataText","rowProps","Object","Function","cellProps","VDataTableRows","name","inheritAttrs","props","setup","_ref","attrs","slots","_useHeaders","columns","_useExpanded","expandOnClick","toggleExpand","isExpanded","_useSelection","isSelected","toggleSelect","_useGroupBy","toggleGroup","isGroupOpen","_useLocale","t","length","_slots$loading","_slots$loading2","_createVNode","value","call","_slots$noData","_slots$noData2","_Fragment","map","item","index","_item$key","_slots$expandedRow","slotProps","_mergeProps","concat","id","raw","internalItem","itemSlotProps","_objectSpread","key","onClick","undefined"],"sources":["../../../src/components/VDataTable/VDataTableRows.tsx"],"sourcesContent":["// Components\nimport { VDataTableGroupHeaderRow } from './VDataTableGroupHeaderRow'\nimport { VDataTableRow } from './VDataTableRow'\n\n// Composables\nimport { useExpanded } from './composables/expand'\nimport { useGroupBy } from './composables/group'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { Fragment, mergeProps } from 'vue'\nimport { genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { Group } from './composables/group'\nimport type { CellProps, DataTableItem, GroupHeaderSlot, ItemSlot, RowProps } from './types'\nimport type { VDataTableGroupHeaderRowSlots } from './VDataTableGroupHeaderRow'\nimport type { VDataTableRowSlots } from './VDataTableRow'\nimport type { GenericProps } from '@/util'\n\nexport type VDataTableRowsSlots<T> = VDataTableGroupHeaderRowSlots & VDataTableRowSlots<T> & {\n  item: ItemSlot<T> & { props: Record<string, any> }\n  loading: never\n  'group-header': GroupHeaderSlot\n  'no-data': never\n  'expanded-row': ItemSlot<T>\n}\n\nexport const makeVDataTableRowsProps = propsFactory({\n  loading: [Boolean, String],\n  loadingText: {\n    type: String,\n    default: '$vuetify.dataIterator.loadingText',\n  },\n  hideNoData: Boolean,\n  items: {\n    type: Array as PropType<readonly (DataTableItem | Group)[]>,\n    default: () => ([]),\n  },\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  rowProps: [Object, Function] as PropType<RowProps<any>>,\n  cellProps: [Object, Function] as PropType<CellProps<any>>,\n}, 'VDataTableRows')\n\nexport const VDataTableRows = genericComponent<new <T>(\n  props: {\n    items?: readonly (DataTableItem<T> | Group<T>)[]\n  },\n  slots: VDataTableRowsSlots<T>,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VDataTableRows',\n\n  inheritAttrs: false,\n\n  props: makeVDataTableRowsProps(),\n\n  setup (props, { attrs, slots }) {\n    const { columns } = useHeaders()\n    const { expandOnClick, toggleExpand, isExpanded } = useExpanded()\n    const { isSelected, toggleSelect } = useSelection()\n    const { toggleGroup, isGroupOpen } = useGroupBy()\n    const { t } = useLocale()\n\n    useRender(() => {\n      if (props.loading && (!props.items.length || slots.loading)) {\n        return (\n          <tr\n            class=\"v-data-table-rows-loading\"\n            key=\"loading\"\n          >\n            <td colspan={ columns.value.length }>\n              { slots.loading?.() ?? t(props.loadingText) }\n            </td>\n          </tr>\n        )\n      }\n\n      if (!props.loading && !props.items.length && !props.hideNoData) {\n        return (\n          <tr\n            class=\"v-data-table-rows-no-data\"\n            key=\"no-data\"\n          >\n            <td colspan={ columns.value.length }>\n              { slots['no-data']?.() ?? t(props.noDataText) }\n            </td>\n          </tr>\n        )\n      }\n\n      return (\n        <>\n          { props.items.map((item, index) => {\n            if (item.type === 'group') {\n              const slotProps = {\n                index,\n                item,\n                columns: columns.value,\n                isExpanded,\n                toggleExpand,\n                isSelected,\n                toggleSelect,\n                toggleGroup,\n                isGroupOpen,\n              } satisfies GroupHeaderSlot\n\n              return slots['group-header'] ? slots['group-header'](slotProps) : (\n                <VDataTableGroupHeaderRow\n                  key={ `group-header_${item.id}` }\n                  item={ item }\n                  { ...getPrefixedEventHandlers(attrs, ':group-header', () => slotProps) }\n                  v-slots={ slots }\n                />\n              )\n            }\n\n            const slotProps = {\n              index,\n              item: item.raw,\n              internalItem: item,\n              columns: columns.value,\n              isExpanded,\n              toggleExpand,\n              isSelected,\n              toggleSelect,\n            } satisfies ItemSlot<any>\n\n            const itemSlotProps = {\n              ...slotProps,\n              props: mergeProps(\n                {\n                  key: `item_${item.key ?? item.index}`,\n                  onClick: expandOnClick.value ? () => {\n                    toggleExpand(item)\n                  } : undefined,\n                  index,\n                  item,\n                  cellProps: props.cellProps,\n                },\n                getPrefixedEventHandlers(attrs, ':row', () => slotProps),\n                typeof props.rowProps === 'function'\n                  ? props.rowProps({\n                    item: slotProps.item,\n                    index: slotProps.index,\n                    internalItem: slotProps.internalItem,\n                  })\n                  : props.rowProps,\n              ),\n            }\n\n            return (\n              <Fragment key={ itemSlotProps.props.key as string }>\n                { slots.item ? slots.item(itemSlotProps) : (\n                  <VDataTableRow\n                    { ...itemSlotProps.props }\n                    v-slots={ slots }\n                  />\n                )}\n\n                { isExpanded(item) && slots['expanded-row']?.(slotProps) }\n              </Fragment>\n            )\n          })}\n        </>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDataTableRows = InstanceType<typeof VDataTableRows>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}