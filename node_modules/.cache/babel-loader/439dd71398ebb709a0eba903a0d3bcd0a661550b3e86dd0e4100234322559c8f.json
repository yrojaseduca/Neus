{"ast":null,"code":"import _toConsumableArray from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\n// Composables\nimport { useProxiedModel } from \"../../../composables/proxiedModel.mjs\"; // Utilities\nimport { inject, provide, toRef } from 'vue';\nimport { propsFactory } from \"../../../util/index.mjs\"; // Types\nexport var makeDataTableExpandProps = propsFactory({\n  expandOnClick: Boolean,\n  showExpand: Boolean,\n  expanded: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  }\n}, 'DataTable-expand');\nexport var VDataTableExpandedKey = Symbol[\"for\"]('vuetify:datatable:expanded');\nexport function provideExpanded(props) {\n  var expandOnClick = toRef(props, 'expandOnClick');\n  var expanded = useProxiedModel(props, 'expanded', props.expanded, function (v) {\n    return new Set(v);\n  }, function (v) {\n    return _toConsumableArray(v.values());\n  });\n  function expand(item, value) {\n    var newExpanded = new Set(expanded.value);\n    if (!value) {\n      newExpanded[\"delete\"](item.value);\n    } else {\n      newExpanded.add(item.value);\n    }\n    expanded.value = newExpanded;\n  }\n  function isExpanded(item) {\n    return expanded.value.has(item.value);\n  }\n  function toggleExpand(item) {\n    expand(item, !isExpanded(item));\n  }\n  var data = {\n    expand: expand,\n    expanded: expanded,\n    expandOnClick: expandOnClick,\n    isExpanded: isExpanded,\n    toggleExpand: toggleExpand\n  };\n  provide(VDataTableExpandedKey, data);\n  return data;\n}\nexport function useExpanded() {\n  var data = inject(VDataTableExpandedKey);\n  if (!data) throw new Error('foo');\n  return data;\n}","map":{"version":3,"names":["useProxiedModel","inject","provide","toRef","propsFactory","makeDataTableExpandProps","expandOnClick","Boolean","showExpand","expanded","type","Array","_default","VDataTableExpandedKey","Symbol","provideExpanded","props","v","Set","_toConsumableArray","values","expand","item","value","newExpanded","add","isExpanded","has","toggleExpand","data","useExpanded","Error"],"sources":["../../../../src/components/VDataTable/composables/expand.ts"],"sourcesContent":["// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { inject, provide, toRef } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { DataTableItem } from '../types'\n\nexport const makeDataTableExpandProps = propsFactory({\n  expandOnClick: Boolean,\n  showExpand: Boolean,\n  expanded: {\n    type: Array as PropType<readonly string[]>,\n    default: () => ([]),\n  },\n}, 'DataTable-expand')\n\nexport const VDataTableExpandedKey: InjectionKey<{\n  expand: (item: DataTableItem, value: boolean) => void\n  expanded: Ref<Set<string>>\n  expandOnClick: Ref<boolean | undefined>\n  isExpanded: (item: DataTableItem) => boolean\n  toggleExpand: (item: DataTableItem) => void\n}> = Symbol.for('vuetify:datatable:expanded')\n\ntype ExpandProps = {\n  expandOnClick: boolean\n  expanded: readonly string[]\n  'onUpdate:expanded': ((value: any[]) => void) | undefined\n}\n\nexport function provideExpanded (props: ExpandProps) {\n  const expandOnClick = toRef(props, 'expandOnClick')\n  const expanded = useProxiedModel(props, 'expanded', props.expanded, v => {\n    return new Set(v)\n  }, v => {\n    return [...v.values()]\n  })\n\n  function expand (item: DataTableItem, value: boolean) {\n    const newExpanded = new Set(expanded.value)\n\n    if (!value) {\n      newExpanded.delete(item.value)\n    } else {\n      newExpanded.add(item.value)\n    }\n\n    expanded.value = newExpanded\n  }\n\n  function isExpanded (item: DataTableItem) {\n    return expanded.value.has(item.value)\n  }\n\n  function toggleExpand (item: DataTableItem) {\n    expand(item, !isExpanded(item))\n  }\n\n  const data = { expand, expanded, expandOnClick, isExpanded, toggleExpand }\n\n  provide(VDataTableExpandedKey, data)\n\n  return data\n}\n\nexport function useExpanded () {\n  const data = inject(VDataTableExpandedKey)\n\n  if (!data) throw new Error('foo')\n\n  return data\n}\n"],"mappings":";;;;;;;;;AAAA;AAAA,SACSA,eAAe,iDAExB;AACA,SAASC,MAAM,EAAEC,OAAO,EAAEC,KAAK,QAAQ,KAAK;AAAA,SACnCC,YAAY,mCAErB;AAIA,OAAO,IAAMC,wBAAwB,GAAGD,YAAY,CAAC;EACnDE,aAAa,EAAEC,OAAO;EACtBC,UAAU,EAAED,OAAO;EACnBE,QAAQ,EAAE;IACRC,IAAI,EAAEC,KAAoC;IAC1C,WAAS,SAAAC,SAAA;MAAA,OAAO;IAAA;EAClB;AACF,CAAC,EAAE,kBAAkB,CAAC;AAEtB,OAAO,IAAMC,qBAMX,GAAGC,MAAM,OAAI,CAAC,4BAA4B,CAAC;AAQ7C,OAAO,SAASC,eAAeA,CAAEC,KAAkB,EAAE;EACnD,IAAMV,aAAa,GAAGH,KAAK,CAACa,KAAK,EAAE,eAAe,CAAC;EACnD,IAAMP,QAAQ,GAAGT,eAAe,CAACgB,KAAK,EAAE,UAAU,EAAEA,KAAK,CAACP,QAAQ,EAAE,UAAAQ,CAAC,EAAI;IACvE,OAAO,IAAIC,GAAG,CAACD,CAAC,CAAC;EACnB,CAAC,EAAE,UAAAA,CAAC,EAAI;IACN,OAAAE,kBAAA,CAAWF,CAAC,CAACG,MAAM,CAAC,CAAC;EACvB,CAAC,CAAC;EAEF,SAASC,MAAMA,CAAEC,IAAmB,EAAEC,KAAc,EAAE;IACpD,IAAMC,WAAW,GAAG,IAAIN,GAAG,CAACT,QAAQ,CAACc,KAAK,CAAC;IAE3C,IAAI,CAACA,KAAK,EAAE;MACVC,WAAW,UAAO,CAACF,IAAI,CAACC,KAAK,CAAC;IAChC,CAAC,MAAM;MACLC,WAAW,CAACC,GAAG,CAACH,IAAI,CAACC,KAAK,CAAC;IAC7B;IAEAd,QAAQ,CAACc,KAAK,GAAGC,WAAW;EAC9B;EAEA,SAASE,UAAUA,CAAEJ,IAAmB,EAAE;IACxC,OAAOb,QAAQ,CAACc,KAAK,CAACI,GAAG,CAACL,IAAI,CAACC,KAAK,CAAC;EACvC;EAEA,SAASK,YAAYA,CAAEN,IAAmB,EAAE;IAC1CD,MAAM,CAACC,IAAI,EAAE,CAACI,UAAU,CAACJ,IAAI,CAAC,CAAC;EACjC;EAEA,IAAMO,IAAI,GAAG;IAAER,MAAM,EAANA,MAAM;IAAEZ,QAAQ,EAARA,QAAQ;IAAEH,aAAa,EAAbA,aAAa;IAAEoB,UAAU,EAAVA,UAAU;IAAEE,YAAA,EAAAA;EAAa,CAAC;EAE1E1B,OAAO,CAACW,qBAAqB,EAAEgB,IAAI,CAAC;EAEpC,OAAOA,IAAI;AACb;AAEA,OAAO,SAASC,WAAWA,CAAA,EAAI;EAC7B,IAAMD,IAAI,GAAG5B,MAAM,CAACY,qBAAqB,CAAC;EAE1C,IAAI,CAACgB,IAAI,EAAE,MAAM,IAAIE,KAAK,CAAC,KAAK,CAAC;EAEjC,OAAOF,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}