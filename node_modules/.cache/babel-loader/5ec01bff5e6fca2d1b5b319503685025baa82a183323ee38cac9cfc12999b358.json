{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\"; // Composables\nimport { useExpanded } from \"./composables/expand.mjs\";\nimport { useHeaders } from \"./composables/headers.mjs\";\nimport { useSelection } from \"./composables/select.mjs\";\nimport { VDataTableColumn } from \"./VDataTableColumn.mjs\"; // Utilities\nimport { toDisplayString, withModifiers } from 'vue';\nimport { EventProp, genericComponent, getObjectValueByPath, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVDataTableRowProps = propsFactory({\n  index: Number,\n  item: Object,\n  cellProps: [Object, Function],\n  onClick: EventProp(),\n  onContextmenu: EventProp(),\n  onDblclick: EventProp()\n}, 'VDataTableRow');\nexport var VDataTableRow = genericComponent()({\n  name: 'VDataTableRow',\n  props: makeVDataTableRowProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useSelection = useSelection(),\n      isSelected = _useSelection.isSelected,\n      toggleSelect = _useSelection.toggleSelect;\n    var _useExpanded = useExpanded(),\n      isExpanded = _useExpanded.isExpanded,\n      toggleExpand = _useExpanded.toggleExpand;\n    var _useHeaders = useHeaders(),\n      columns = _useHeaders.columns;\n    useRender(function () {\n      return _createVNode(\"tr\", {\n        \"class\": ['v-data-table__tr', {\n          'v-data-table__tr--clickable': !!(props.onClick || props.onContextmenu || props.onDblclick)\n        }],\n        \"onClick\": props.onClick,\n        \"onContextmenu\": props.onContextmenu,\n        \"onDblclick\": props.onDblclick\n      }, [props.item && columns.value.map(function (column, i) {\n        var item = props.item;\n        var slotName = \"item.\".concat(column.key);\n        var slotProps = {\n          index: props.index,\n          item: item.raw,\n          internalItem: item,\n          value: getObjectValueByPath(item.columns, column.key),\n          column: column,\n          isSelected: isSelected,\n          toggleSelect: toggleSelect,\n          isExpanded: isExpanded,\n          toggleExpand: toggleExpand\n        };\n        var cellProps = typeof props.cellProps === 'function' ? props.cellProps({\n          index: slotProps.index,\n          item: slotProps.item,\n          internalItem: slotProps.internalItem,\n          value: slotProps.value,\n          column: column\n        }) : props.cellProps;\n        var columnCellProps = typeof column.cellProps === 'function' ? column.cellProps({\n          index: slotProps.index,\n          item: slotProps.item,\n          internalItem: slotProps.internalItem,\n          value: slotProps.value\n        }) : column.cellProps;\n        return _createVNode(VDataTableColumn, _mergeProps({\n          \"align\": column.align,\n          \"fixed\": column.fixed,\n          \"fixedOffset\": column.fixedOffset,\n          \"lastFixed\": column.lastFixed,\n          \"noPadding\": column.key === 'data-table-select' || column.key === 'data-table-expand',\n          \"width\": column.width\n        }, cellProps, columnCellProps), {\n          \"default\": function _default() {\n            if (slots[slotName]) return slots[slotName](slotProps);\n            if (column.key === 'data-table-select') {\n              var _slots$itemDataTabl, _slots$itemDataTabl2;\n              return (_slots$itemDataTabl = (_slots$itemDataTabl2 = slots['item.data-table-select']) === null || _slots$itemDataTabl2 === void 0 ? void 0 : _slots$itemDataTabl2.call(slots, slotProps)) !== null && _slots$itemDataTabl !== void 0 ? _slots$itemDataTabl : _createVNode(VCheckboxBtn, {\n                \"disabled\": !item.selectable,\n                \"modelValue\": isSelected([item]),\n                \"onClick\": withModifiers(function () {\n                  return toggleSelect(item);\n                }, ['stop'])\n              }, null);\n            }\n            if (column.key === 'data-table-expand') {\n              var _slots$itemDataTabl3, _slots$itemDataTabl4;\n              return (_slots$itemDataTabl3 = (_slots$itemDataTabl4 = slots['item.data-table-expand']) === null || _slots$itemDataTabl4 === void 0 ? void 0 : _slots$itemDataTabl4.call(slots, slotProps)) !== null && _slots$itemDataTabl3 !== void 0 ? _slots$itemDataTabl3 : _createVNode(VBtn, {\n                \"icon\": isExpanded(item) ? '$collapse' : '$expand',\n                \"size\": \"small\",\n                \"variant\": \"text\",\n                \"onClick\": withModifiers(function () {\n                  return toggleExpand(item);\n                }, ['stop'])\n              }, null);\n            }\n            return toDisplayString(slotProps.value);\n          }\n        });\n      })]);\n    });\n  }\n});","map":{"version":3,"names":["VBtn","VCheckboxBtn","useExpanded","useHeaders","useSelection","VDataTableColumn","toDisplayString","withModifiers","EventProp","genericComponent","getObjectValueByPath","propsFactory","useRender","makeVDataTableRowProps","index","Number","item","Object","cellProps","Function","onClick","onContextmenu","onDblclick","VDataTableRow","name","props","setup","_ref","slots","_useSelection","isSelected","toggleSelect","_useExpanded","isExpanded","toggleExpand","_useHeaders","columns","_createVNode","value","map","column","i","slotName","concat","key","slotProps","raw","internalItem","columnCellProps","_mergeProps","align","fixed","fixedOffset","lastFixed","width","_default","_slots$itemDataTabl","_slots$itemDataTabl2","call","selectable","_slots$itemDataTabl3","_slots$itemDataTabl4"],"sources":["../../../src/components/VDataTable/VDataTableRow.tsx"],"sourcesContent":["// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\n\n// Composables\nimport { useExpanded } from './composables/expand'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\nimport { VDataTableColumn } from './VDataTableColumn'\n\n// Utilities\nimport { toDisplayString, withModifiers } from 'vue'\nimport { EventProp, genericComponent, getObjectValueByPath, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { CellProps, DataTableItem, ItemKeySlot } from './types'\nimport type { GenericProps } from '@/util'\n\nexport type VDataTableRowSlots<T> = {\n  'item.data-table-select': Omit<ItemKeySlot<T>, 'value'>\n  'item.data-table-expand': Omit<ItemKeySlot<T>, 'value'>\n} & { [key: `item.${string}`]: ItemKeySlot<T> }\n\nexport const makeVDataTableRowProps = propsFactory({\n  index: Number,\n  item: Object as PropType<DataTableItem>,\n  cellProps: [Object, Function] as PropType<CellProps<any>>,\n  onClick: EventProp<[MouseEvent]>(),\n  onContextmenu: EventProp<[MouseEvent]>(),\n  onDblclick: EventProp<[MouseEvent]>(),\n}, 'VDataTableRow')\n\nexport const VDataTableRow = genericComponent<new <T>(\n  props: {\n    item?: DataTableItem<T>\n    cellProps?: CellProps<T>\n  },\n  slots: VDataTableRowSlots<T>,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VDataTableRow',\n\n  props: makeVDataTableRowProps(),\n\n  setup (props, { slots }) {\n    const { isSelected, toggleSelect } = useSelection()\n    const { isExpanded, toggleExpand } = useExpanded()\n    const { columns } = useHeaders()\n\n    useRender(() => (\n      <tr\n        class={[\n          'v-data-table__tr',\n          {\n            'v-data-table__tr--clickable': !!(props.onClick || props.onContextmenu || props.onDblclick),\n          },\n        ]}\n        onClick={ props.onClick as any }\n        onContextmenu={ props.onContextmenu as any }\n        onDblclick={ props.onDblclick as any }\n      >\n        { props.item && columns.value.map((column, i) => {\n          const item = props.item!\n          const slotName = `item.${column.key}` as const\n          const slotProps = {\n            index: props.index!,\n            item: item.raw,\n            internalItem: item,\n            value: getObjectValueByPath(item.columns, column.key),\n            column,\n            isSelected,\n            toggleSelect,\n            isExpanded,\n            toggleExpand,\n          } satisfies ItemKeySlot<any>\n\n          const cellProps = typeof props.cellProps === 'function'\n            ? props.cellProps({\n              index: slotProps.index,\n              item: slotProps.item,\n              internalItem: slotProps.internalItem,\n              value: slotProps.value,\n              column,\n            })\n            : props.cellProps\n          const columnCellProps = typeof column.cellProps === 'function'\n            ? column.cellProps({\n              index: slotProps.index,\n              item: slotProps.item,\n              internalItem: slotProps.internalItem,\n              value: slotProps.value,\n            })\n            : column.cellProps\n\n          return (\n            <VDataTableColumn\n              align={ column.align }\n              fixed={ column.fixed }\n              fixedOffset={ column.fixedOffset }\n              lastFixed={ column.lastFixed }\n              noPadding={ column.key === 'data-table-select' || column.key === 'data-table-expand' }\n              width={ column.width }\n              { ...cellProps }\n              { ...columnCellProps }\n            >\n              {{\n                default: () => {\n                  if (slots[slotName]) return slots[slotName]!(slotProps)\n\n                  if (column.key === 'data-table-select') {\n                    return slots['item.data-table-select']?.(slotProps) ?? (\n                      <VCheckboxBtn\n                        disabled={ !item.selectable }\n                        modelValue={ isSelected([item]) }\n                        onClick={ withModifiers(() => toggleSelect(item), ['stop']) }\n                      />\n                    )\n                  }\n\n                  if (column.key === 'data-table-expand') {\n                    return slots['item.data-table-expand']?.(slotProps) ?? (\n                      <VBtn\n                        icon={ isExpanded(item) ? '$collapse' : '$expand' }\n                        size=\"small\"\n                        variant=\"text\"\n                        onClick={ withModifiers(() => toggleExpand(item), ['stop']) }\n                      />\n                    )\n                  }\n\n                  return toDisplayString(slotProps.value)\n                },\n              }}\n            </VDataTableColumn>\n          )\n        })}\n      </tr>\n    ))\n  },\n})\n\nexport type VDataTableRow = InstanceType<typeof VDataTableRow>\n"],"mappings":";;;;AAAA;AAAA,SACSA,IAAI;AAAA,SACJC,YAAY,kCAErB;AAAA,SACSC,WAAW;AAAA,SACXC,UAAU;AAAA,SACVC,YAAY;AAAA,SACZC,gBAAgB,kCAEzB;AACA,SAASC,eAAe,EAAEC,aAAa,QAAQ,KAAK;AAAA,SAC3CC,SAAS,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,YAAY,EAAEC,SAAS,gCAEnF;AAUA,OAAO,IAAMC,sBAAsB,GAAGF,YAAY,CAAC;EACjDG,KAAK,EAAEC,MAAM;EACbC,IAAI,EAAEC,MAAiC;EACvCC,SAAS,EAAE,CAACD,MAAM,EAAEE,QAAQ,CAA6B;EACzDC,OAAO,EAAEZ,SAAS,CAAe,CAAC;EAClCa,aAAa,EAAEb,SAAS,CAAe,CAAC;EACxCc,UAAU,EAAEd,SAAS,CAAe;AACtC,CAAC,EAAE,eAAe,CAAC;AAEnB,OAAO,IAAMe,aAAa,GAAGd,gBAAgB,CAME,CAAC,CAAC;EAC/Ce,IAAI,EAAE,eAAe;EAErBC,KAAK,EAAEZ,sBAAsB,CAAC,CAAC;EAE/Ba,KAAK,WAAAA,MAAED,KAAK,EAAAE,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAAC,aAAA,GAAqCzB,YAAY,CAAC,CAAC;MAA3C0B,UAAU,GAAAD,aAAA,CAAVC,UAAU;MAAEC,YAAA,GAAAF,aAAA,CAAAE,YAAA;IACpB,IAAAC,YAAA,GAAqC9B,WAAW,CAAC,CAAC;MAA1C+B,UAAU,GAAAD,YAAA,CAAVC,UAAU;MAAEC,YAAA,GAAAF,YAAA,CAAAE,YAAA;IACpB,IAAAC,WAAA,GAAoBhC,UAAU,CAAC,CAAC;MAAxBiC,OAAA,GAAAD,WAAA,CAAAC,OAAA;IAERxB,SAAS,CAAC;MAAA,OAAAyB,YAAA;QAAA,SAEC,CACL,kBAAkB,EAClB;UACE,6BAA6B,EAAE,CAAC,EAAEZ,KAAK,CAACL,OAAO,IAAIK,KAAK,CAACJ,aAAa,IAAII,KAAK,CAACH,UAAU;QAC5F,CAAC,CACF;QAAA,WACSG,KAAK,CAACL,OAAO;QAAA,iBACPK,KAAK,CAACJ,aAAa;QAAA,cACtBI,KAAK,CAACH;MAAU,IAE3BG,KAAK,CAACT,IAAI,IAAIoB,OAAO,CAACE,KAAK,CAACC,GAAG,CAAC,UAACC,MAAM,EAAEC,CAAC,EAAK;QAC/C,IAAMzB,IAAI,GAAGS,KAAK,CAACT,IAAK;QACxB,IAAM0B,QAAQ,WAAAC,MAAA,CAAWH,MAAM,CAACI,GAAI,CAAU;QAC9C,IAAMC,SAAS,GAAG;UAChB/B,KAAK,EAAEW,KAAK,CAACX,KAAM;UACnBE,IAAI,EAAEA,IAAI,CAAC8B,GAAG;UACdC,YAAY,EAAE/B,IAAI;UAClBsB,KAAK,EAAE5B,oBAAoB,CAACM,IAAI,CAACoB,OAAO,EAAEI,MAAM,CAACI,GAAG,CAAC;UACrDJ,MAAM,EAANA,MAAM;UACNV,UAAU,EAAVA,UAAU;UACVC,YAAY,EAAZA,YAAY;UACZE,UAAU,EAAVA,UAAU;UACVC,YAAA,EAAAA;QACF,CAA4B;QAE5B,IAAMhB,SAAS,GAAG,OAAOO,KAAK,CAACP,SAAS,KAAK,UAAU,GACnDO,KAAK,CAACP,SAAS,CAAC;UAChBJ,KAAK,EAAE+B,SAAS,CAAC/B,KAAK;UACtBE,IAAI,EAAE6B,SAAS,CAAC7B,IAAI;UACpB+B,YAAY,EAAEF,SAAS,CAACE,YAAY;UACpCT,KAAK,EAAEO,SAAS,CAACP,KAAK;UACtBE,MAAA,EAAAA;QACF,CAAC,CAAC,GACAf,KAAK,CAACP,SAAS;QACnB,IAAM8B,eAAe,GAAG,OAAOR,MAAM,CAACtB,SAAS,KAAK,UAAU,GAC1DsB,MAAM,CAACtB,SAAS,CAAC;UACjBJ,KAAK,EAAE+B,SAAS,CAAC/B,KAAK;UACtBE,IAAI,EAAE6B,SAAS,CAAC7B,IAAI;UACpB+B,YAAY,EAAEF,SAAS,CAACE,YAAY;UACpCT,KAAK,EAAEO,SAAS,CAACP;QACnB,CAAC,CAAC,GACAE,MAAM,CAACtB,SAAS;QAEpB,OAAAmB,YAAA,CAAAhC,gBAAA,EAAA4C,WAAA;UAAA,SAEYT,MAAM,CAACU,KAAK;UAAA,SACZV,MAAM,CAACW,KAAK;UAAA,eACNX,MAAM,CAACY,WAAW;UAAA,aACpBZ,MAAM,CAACa,SAAS;UAAA,aAChBb,MAAM,CAACI,GAAG,KAAK,mBAAmB,IAAIJ,MAAM,CAACI,GAAG,KAAK,mBAAmB;UAAA,SAC5EJ,MAAM,CAACc;QAAK,GACfpC,SAAS,EACT8B,eAAe;UAGlB,WAAS,SAAAO,SAAA,EAAM;YACb,IAAI3B,KAAK,CAACc,QAAQ,CAAC,EAAE,OAAOd,KAAK,CAACc,QAAQ,CAAC,CAAEG,SAAS,CAAC;YAEvD,IAAIL,MAAM,CAACI,GAAG,KAAK,mBAAmB,EAAE;cAAA,IAAAY,mBAAA,EAAAC,oBAAA;cACtC,QAAAD,mBAAA,IAAAC,oBAAA,GAAO7B,KAAK,CAAC,wBAAwB,CAAC,cAAA6B,oBAAA,uBAA/BA,oBAAA,CAAAC,IAAA,CAAA9B,KAAK,EAA6BiB,SAAS,CAAC,cAAAW,mBAAA,cAAAA,mBAAA,GAAAnB,YAAA,CAAApC,YAAA;gBAAA,YAEpC,CAACe,IAAI,CAAC2C,UAAU;gBAAA,cACd7B,UAAU,CAAC,CAACd,IAAI,CAAC,CAAC;gBAAA,WACrBT,aAAa,CAAC;kBAAA,OAAMwB,YAAY,CAACf,IAAI,CAAC;gBAAA,GAAE,CAAC,MAAM,CAAC;cAAC,QAE9D;YACH;YAEA,IAAIwB,MAAM,CAACI,GAAG,KAAK,mBAAmB,EAAE;cAAA,IAAAgB,oBAAA,EAAAC,oBAAA;cACtC,QAAAD,oBAAA,IAAAC,oBAAA,GAAOjC,KAAK,CAAC,wBAAwB,CAAC,cAAAiC,oBAAA,uBAA/BA,oBAAA,CAAAH,IAAA,CAAA9B,KAAK,EAA6BiB,SAAS,CAAC,cAAAe,oBAAA,cAAAA,oBAAA,GAAAvB,YAAA,CAAArC,IAAA;gBAAA,QAExCiC,UAAU,CAACjB,IAAI,CAAC,GAAG,WAAW,GAAG,SAAS;gBAAA;gBAAA;gBAAA,WAGvCT,aAAa,CAAC;kBAAA,OAAM2B,YAAY,CAAClB,IAAI,CAAC;gBAAA,GAAE,CAAC,MAAM,CAAC;cAAC,QAE9D;YACH;YAEA,OAAOV,eAAe,CAACuC,SAAS,CAACP,KAAK,CAAC;UACzC;QAAC;MAIT,CAAC,CAAC,EAEL;IAAA,EAAC;EACJ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}