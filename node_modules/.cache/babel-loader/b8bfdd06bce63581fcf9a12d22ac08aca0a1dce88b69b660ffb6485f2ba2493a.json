{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"label\"],\n  _excluded2 = [\"getValue\", \"getColor\"];\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VColorPickerEdit.css\";\n\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { modes, nullColor } from \"./util/index.mjs\";\nimport { defineComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nvar VColorPickerInput = function VColorPickerInput(_ref) {\n  var label = _ref.label,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return _createVNode(\"div\", {\n    \"class\": \"v-color-picker-edit__input\"\n  }, [_createVNode(\"input\", rest, null), _createVNode(\"span\", null, [label])]);\n};\nexport var makeVColorPickerEditProps = propsFactory(_objectSpread({\n  color: Object,\n  disabled: Boolean,\n  mode: {\n    type: String,\n    \"default\": 'rgba',\n    validator: function validator(v) {\n      return Object.keys(modes).includes(v);\n    }\n  },\n  modes: {\n    type: Array,\n    \"default\": function _default() {\n      return Object.keys(modes);\n    },\n    validator: function validator(v) {\n      return Array.isArray(v) && v.every(function (m) {\n        return Object.keys(modes).includes(m);\n      });\n    }\n  }\n}, makeComponentProps()), 'VColorPickerEdit');\nexport var VColorPickerEdit = defineComponent({\n  name: 'VColorPickerEdit',\n  props: makeVColorPickerEditProps(),\n  emits: {\n    'update:color': function updateColor(color) {\n      return true;\n    },\n    'update:mode': function updateMode(mode) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref2) {\n    var emit = _ref2.emit;\n    var enabledModes = computed(function () {\n      return props.modes.map(function (key) {\n        return _objectSpread(_objectSpread({}, modes[key]), {}, {\n          name: key\n        });\n      });\n    });\n    var inputs = computed(function () {\n      var _mode$inputs;\n      var mode = enabledModes.value.find(function (m) {\n        return m.name === props.mode;\n      });\n      if (!mode) return [];\n      var color = props.color ? mode.to(props.color) : null;\n      return (_mode$inputs = mode.inputs) === null || _mode$inputs === void 0 ? void 0 : _mode$inputs.map(function (_ref3) {\n        var getValue = _ref3.getValue,\n          getColor = _ref3.getColor,\n          inputProps = _objectWithoutProperties(_ref3, _excluded2);\n        return _objectSpread(_objectSpread(_objectSpread({}, mode.inputProps), inputProps), {}, {\n          disabled: props.disabled,\n          value: color && getValue(color),\n          onChange: function onChange(e) {\n            var target = e.target;\n            if (!target) return;\n            emit('update:color', mode.from(getColor(color !== null && color !== void 0 ? color : nullColor, target.value)));\n          }\n        });\n      });\n    });\n    useRender(function () {\n      var _inputs$value;\n      return _createVNode(\"div\", {\n        \"class\": ['v-color-picker-edit', props[\"class\"]],\n        \"style\": props.style\n      }, [(_inputs$value = inputs.value) === null || _inputs$value === void 0 ? void 0 : _inputs$value.map(function (props) {\n        return _createVNode(VColorPickerInput, props, null);\n      }), enabledModes.value.length > 1 && _createVNode(VBtn, {\n        \"icon\": \"$unfold\",\n        \"size\": \"x-small\",\n        \"variant\": \"plain\",\n        \"onClick\": function onClick() {\n          var mi = enabledModes.value.findIndex(function (m) {\n            return m.name === props.mode;\n          });\n          emit('update:mode', enabledModes.value[(mi + 1) % enabledModes.value.length].name);\n        }\n      }, null)]);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VBtn","makeComponentProps","computed","modes","nullColor","defineComponent","propsFactory","useRender","VColorPickerInput","_ref","label","rest","_objectWithoutProperties","_excluded","_createVNode","makeVColorPickerEditProps","_objectSpread","color","Object","disabled","Boolean","mode","type","String","validator","v","keys","includes","Array","_default","isArray","every","m","VColorPickerEdit","name","props","emits","updateColor","updateMode","setup","_ref2","emit","enabledModes","map","key","inputs","_mode$inputs","value","find","to","_ref3","getValue","getColor","inputProps","_excluded2","onChange","e","target","from","_inputs$value","style","length","onClick","mi","findIndex"],"sources":["../../../src/components/VColorPicker/VColorPickerEdit.tsx"],"sourcesContent":["// Styles\nimport './VColorPickerEdit.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { computed } from 'vue'\nimport { modes, nullColor } from './util'\nimport { defineComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { HSV } from '@/util/colorUtils'\n\nconst VColorPickerInput = ({ label, ...rest }: any) => {\n  return (\n    <div\n      class=\"v-color-picker-edit__input\"\n    >\n      <input { ...rest } />\n      <span>{ label }</span>\n    </div>\n  )\n}\n\nexport const makeVColorPickerEditProps = propsFactory({\n  color: Object as PropType<HSV | null>,\n  disabled: Boolean,\n  mode: {\n    type: String as PropType<keyof typeof modes>,\n    default: 'rgba',\n    validator: (v: string) => Object.keys(modes).includes(v),\n  },\n  modes: {\n    type: Array as PropType<readonly (keyof typeof modes)[]>,\n    default: () => Object.keys(modes),\n    validator: (v: any) => Array.isArray(v) && v.every(m => Object.keys(modes).includes(m)),\n  },\n\n  ...makeComponentProps(),\n}, 'VColorPickerEdit')\n\nexport const VColorPickerEdit = defineComponent({\n  name: 'VColorPickerEdit',\n\n  props: makeVColorPickerEditProps(),\n\n  emits: {\n    'update:color': (color: HSV) => true,\n    'update:mode': (mode: keyof typeof modes) => true,\n  },\n\n  setup (props, { emit }) {\n    const enabledModes = computed(() => {\n      return props.modes.map(key => ({ ...modes[key], name: key }))\n    })\n\n    const inputs = computed(() => {\n      const mode = enabledModes.value.find(m => m.name === props.mode)\n\n      if (!mode) return []\n\n      const color = props.color ? mode.to(props.color) : null\n\n      return mode.inputs?.map(({ getValue, getColor, ...inputProps }) => {\n        return {\n          ...mode.inputProps,\n          ...inputProps,\n          disabled: props.disabled,\n          value: color && getValue(color),\n          onChange: (e: InputEvent) => {\n            const target = e.target as HTMLInputElement | null\n\n            if (!target) return\n\n            emit('update:color', mode.from(getColor(color ?? nullColor, target.value)))\n          },\n        }\n      })\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-color-picker-edit',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { inputs.value?.map(props => (\n          <VColorPickerInput { ...props } />\n        ))}\n        { enabledModes.value.length > 1 && (\n          <VBtn\n            icon=\"$unfold\"\n            size=\"x-small\"\n            variant=\"plain\"\n            onClick={ () => {\n              const mi = enabledModes.value.findIndex(m => m.name === props.mode)\n\n              emit('update:mode', enabledModes.value[(mi + 1) % enabledModes.value.length].name)\n            }}\n          />\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VColorPickerEdit = InstanceType<typeof VColorPickerEdit>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}