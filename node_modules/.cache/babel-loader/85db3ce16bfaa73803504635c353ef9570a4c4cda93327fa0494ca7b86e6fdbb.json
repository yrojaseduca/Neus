{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeVSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, omit, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVCheckboxBtnProps = propsFactory(_objectSpread({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    \"default\": '$checkboxIndeterminate'\n  }\n}, makeVSelectionControlProps({\n  falseIcon: '$checkboxOff',\n  trueIcon: '$checkboxOn'\n})), 'VCheckboxBtn');\nexport var VCheckboxBtn = genericComponent()({\n  name: 'VCheckboxBtn',\n  props: makeVCheckboxBtnProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    'update:indeterminate': function updateIndeterminate(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var indeterminate = useProxiedModel(props, 'indeterminate');\n    var model = useProxiedModel(props, 'modelValue');\n    function onChange(v) {\n      if (indeterminate.value) {\n        indeterminate.value = false;\n      }\n    }\n    var falseIcon = computed(function () {\n      return indeterminate.value ? props.indeterminateIcon : props.falseIcon;\n    });\n    var trueIcon = computed(function () {\n      return indeterminate.value ? props.indeterminateIcon : props.trueIcon;\n    });\n    useRender(function () {\n      var controlProps = omit(VSelectionControl.filterProps(props), ['modelValue']);\n      return _createVNode(VSelectionControl, _mergeProps(controlProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": [function ($event) {\n          return model.value = $event;\n        }, onChange],\n        \"class\": ['v-checkbox-btn', props[\"class\"]],\n        \"style\": props.style,\n        \"type\": \"checkbox\",\n        \"falseIcon\": falseIcon.value,\n        \"trueIcon\": trueIcon.value,\n        \"aria-checked\": indeterminate.value ? 'mixed' : undefined\n      }), slots);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["makeVSelectionControlProps","VSelectionControl","IconValue","useProxiedModel","computed","genericComponent","omit","propsFactory","useRender","makeVCheckboxBtnProps","_objectSpread","indeterminate","Boolean","indeterminateIcon","type","falseIcon","trueIcon","VCheckboxBtn","name","props","emits","updateModelValue","value","updateIndeterminate","setup","_ref","slots","model","onChange","v","controlProps","filterProps","_createVNode","_mergeProps","$event","style","undefined"],"sources":["../../../src/components/VCheckbox/VCheckboxBtn.tsx"],"sourcesContent":["// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n"],"mappings":";;AAAA;AAAA,SACSA,0BAA0B,EAAEC,iBAAiB,sDAEtD;AAAA,SACSC,SAAS;AAAA,SACTC,eAAe,8CAExB;AACA,SAASC,QAAQ,QAAQ,KAAK;AAAA,SACrBC,gBAAgB,EAAEC,IAAI,EAAEC,YAAY,EAAEC,SAAS,gCAExD;AAIA,OAAO,IAAMC,qBAAqB,GAAGF,YAAY,CAAAG,aAAA;EAC/CC,aAAa,EAAEC,OAAO;EACtBC,iBAAiB,EAAE;IACjBC,IAAI,EAAEZ,SAAS;IACf,WAAS;EACX;AAAC,GAEEF,0BAA0B,CAAC;EAC5Be,SAAS,EAAE,cAAc;EACzBC,QAAQ,EAAE;AACZ,CAAC,IACA,cAAc,CAAC;AAElB,OAAO,IAAMC,YAAY,GAAGZ,gBAAgB,CAMG,CAAC,CAAC;EAC/Ca,IAAI,EAAE,cAAc;EAEpBC,KAAK,EAAEV,qBAAqB,CAAC,CAAC;EAE9BW,KAAK,EAAE;IACL,mBAAmB,EAAG,SAAAC,iBAAAC,KAAU;MAAA,OAAK,IAAI;IAAA;IACzC,sBAAsB,EAAG,SAAAC,oBAAAD,KAAc;MAAA,OAAK;IAAA;EAC9C,CAAC;EAEDE,KAAK,WAAAA,MAAEL,KAAK,EAAAM,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAMf,aAAa,GAAGR,eAAe,CAACgB,KAAK,EAAE,eAAe,CAAC;IAC7D,IAAMQ,KAAK,GAAGxB,eAAe,CAACgB,KAAK,EAAE,YAAY,CAAC;IAElD,SAASS,QAAQA,CAAEC,CAAM,EAAE;MACzB,IAAIlB,aAAa,CAACW,KAAK,EAAE;QACvBX,aAAa,CAACW,KAAK,GAAG,KAAK;MAC7B;IACF;IAEA,IAAMP,SAAS,GAAGX,QAAQ,CAAC,YAAM;MAC/B,OAAOO,aAAa,CAACW,KAAK,GACtBH,KAAK,CAACN,iBAAiB,GACvBM,KAAK,CAACJ,SAAS;IACrB,CAAC,CAAC;IAEF,IAAMC,QAAQ,GAAGZ,QAAQ,CAAC,YAAM;MAC9B,OAAOO,aAAa,CAACW,KAAK,GACtBH,KAAK,CAACN,iBAAiB,GACvBM,KAAK,CAACH,QAAQ;IACpB,CAAC,CAAC;IAEFR,SAAS,CAAC,YAAM;MACd,IAAMsB,YAAY,GAAGxB,IAAI,CAACL,iBAAiB,CAAC8B,WAAW,CAACZ,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;MAC/E,OAAAa,YAAA,CAAA/B,iBAAA,EAAAgC,WAAA,CAESH,YAAY;QAAA,cACPH,KAAK,CAACL,KAAK;QAAA,kCAAAY,MAAA;UAAA,OAAXP,KAAK,CAACL,KAAK,GAAAY,MAAA;QAAA,GAOCN,QAAQ;QAAA,SANvB,CACL,gBAAgB,EAChBT,KAAK,SAAM,CACZ;QAAA,SACOA,KAAK,CAACgB,KAAK;QAAA;QAAA,aAGPpB,SAAS,CAACO,KAAK;QAAA,YAChBN,QAAQ,CAACM,KAAK;QAAA,gBACVX,aAAa,CAACW,KAAK,GAAG,OAAO,GAAGc;MAAS,IAC9CV,KAAK;IAGrB,CAAC,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}