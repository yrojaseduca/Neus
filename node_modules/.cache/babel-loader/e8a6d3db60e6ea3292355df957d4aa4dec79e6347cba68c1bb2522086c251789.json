{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VColorPicker.css\";\n\n// Components\nimport { VColorPickerCanvas } from \"./VColorPickerCanvas.mjs\";\nimport { VColorPickerEdit } from \"./VColorPickerEdit.mjs\";\nimport { VColorPickerPreview } from \"./VColorPickerPreview.mjs\";\nimport { VColorPickerSwatches } from \"./VColorPickerSwatches.mjs\";\nimport { makeVSheetProps, VSheet } from \"../VSheet/VSheet.mjs\"; // Composables\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { onMounted, ref } from 'vue';\nimport { extractColor, modes, nullColor } from \"./util/index.mjs\";\nimport { consoleWarn, defineComponent, HSVtoCSS, omit, parseColor, propsFactory, RGBtoHSV, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVColorPickerProps = propsFactory(_objectSpread({\n  canvasHeight: {\n    type: [String, Number],\n    \"default\": 150\n  },\n  disabled: Boolean,\n  dotSize: {\n    type: [Number, String],\n    \"default\": 10\n  },\n  hideCanvas: Boolean,\n  hideSliders: Boolean,\n  hideInputs: Boolean,\n  mode: {\n    type: String,\n    \"default\": 'rgba',\n    validator: function validator(v) {\n      return Object.keys(modes).includes(v);\n    }\n  },\n  modes: {\n    type: Array,\n    \"default\": function _default() {\n      return Object.keys(modes);\n    },\n    validator: function validator(v) {\n      return Array.isArray(v) && v.every(function (m) {\n        return Object.keys(modes).includes(m);\n      });\n    }\n  },\n  showSwatches: Boolean,\n  swatches: Array,\n  swatchesMaxHeight: {\n    type: [Number, String],\n    \"default\": 150\n  },\n  modelValue: {\n    type: [Object, String]\n  }\n}, omit(makeVSheetProps({\n  width: 300\n}), ['height', 'location', 'minHeight', 'maxHeight', 'minWidth', 'maxWidth'])), 'VColorPicker');\nexport var VColorPicker = defineComponent({\n  name: 'VColorPicker',\n  props: makeVColorPickerProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(color) {\n      return true;\n    },\n    'update:mode': function updateMode(mode) {\n      return true;\n    }\n  },\n  setup: function setup(props) {\n    var mode = useProxiedModel(props, 'mode');\n    var lastPickedColor = ref(null);\n    var currentColor = useProxiedModel(props, 'modelValue', undefined, function (v) {\n      if (v == null || v === '') return null;\n      var c;\n      try {\n        c = RGBtoHSV(parseColor(v));\n      } catch (err) {\n        consoleWarn(err);\n        return null;\n      }\n      if (lastPickedColor.value) {\n        c = _objectSpread(_objectSpread({}, c), {}, {\n          h: lastPickedColor.value.h\n        });\n        lastPickedColor.value = null;\n      }\n      return c;\n    }, function (v) {\n      if (!v) return null;\n      return extractColor(v, props.modelValue);\n    });\n    var _useRtl = useRtl(),\n      rtlClasses = _useRtl.rtlClasses;\n    var updateColor = function updateColor(hsva) {\n      currentColor.value = hsva;\n      lastPickedColor.value = hsva;\n    };\n    onMounted(function () {\n      if (!props.modes.includes(mode.value)) mode.value = props.modes[0];\n    });\n    provideDefaults({\n      VSlider: {\n        color: undefined,\n        trackColor: undefined,\n        trackFillColor: undefined\n      }\n    });\n    useRender(function () {\n      var _currentColor$value;\n      var sheetProps = VSheet.filterProps(props);\n      return _createVNode(VSheet, _mergeProps({\n        \"rounded\": props.rounded,\n        \"elevation\": props.elevation,\n        \"theme\": props.theme,\n        \"class\": ['v-color-picker', rtlClasses.value, props[\"class\"]],\n        \"style\": [{\n          '--v-color-picker-color-hsv': HSVtoCSS(_objectSpread(_objectSpread({}, (_currentColor$value = currentColor.value) !== null && _currentColor$value !== void 0 ? _currentColor$value : nullColor), {}, {\n            a: 1\n          }))\n        }, props.style]\n      }, sheetProps, {\n        \"maxWidth\": props.width\n      }), {\n        \"default\": function _default() {\n          return [!props.hideCanvas && _createVNode(VColorPickerCanvas, {\n            \"key\": \"canvas\",\n            \"color\": currentColor.value,\n            \"onUpdate:color\": updateColor,\n            \"disabled\": props.disabled,\n            \"dotSize\": props.dotSize,\n            \"width\": props.width,\n            \"height\": props.canvasHeight\n          }, null), (!props.hideSliders || !props.hideInputs) && _createVNode(\"div\", {\n            \"key\": \"controls\",\n            \"class\": \"v-color-picker__controls\"\n          }, [!props.hideSliders && _createVNode(VColorPickerPreview, {\n            \"key\": \"preview\",\n            \"color\": currentColor.value,\n            \"onUpdate:color\": updateColor,\n            \"hideAlpha\": !mode.value.endsWith('a'),\n            \"disabled\": props.disabled\n          }, null), !props.hideInputs && _createVNode(VColorPickerEdit, {\n            \"key\": \"edit\",\n            \"modes\": props.modes,\n            \"mode\": mode.value,\n            \"onUpdate:mode\": function onUpdateMode(m) {\n              return mode.value = m;\n            },\n            \"color\": currentColor.value,\n            \"onUpdate:color\": updateColor,\n            \"disabled\": props.disabled\n          }, null)]), props.showSwatches && _createVNode(VColorPickerSwatches, {\n            \"key\": \"swatches\",\n            \"color\": currentColor.value,\n            \"onUpdate:color\": updateColor,\n            \"maxHeight\": props.swatchesMaxHeight,\n            \"swatches\": props.swatches,\n            \"disabled\": props.disabled\n          }, null)];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VColorPickerCanvas","VColorPickerEdit","VColorPickerPreview","VColorPickerSwatches","makeVSheetProps","VSheet","provideDefaults","useRtl","useProxiedModel","onMounted","ref","extractColor","modes","nullColor","consoleWarn","defineComponent","HSVtoCSS","omit","parseColor","propsFactory","RGBtoHSV","useRender","makeVColorPickerProps","_objectSpread","canvasHeight","type","String","Number","disabled","Boolean","dotSize","hideCanvas","hideSliders","hideInputs","mode","validator","v","Object","keys","includes","Array","_default","isArray","every","m","showSwatches","swatches","swatchesMaxHeight","modelValue","width","VColorPicker","name","props","emits","updateModelValue","color","updateMode","setup","lastPickedColor","currentColor","undefined","c","err","value","h","_useRtl","rtlClasses","updateColor","hsva","VSlider","trackColor","trackFillColor","_currentColor$value","sheetProps","filterProps","_createVNode","_mergeProps","rounded","elevation","theme","a","style","endsWith","onUpdateMode"],"sources":["../../../src/components/VColorPicker/VColorPicker.tsx"],"sourcesContent":["// Styles\nimport './VColorPicker.sass'\n\n// Components\nimport { VColorPickerCanvas } from './VColorPickerCanvas'\nimport { VColorPickerEdit } from './VColorPickerEdit'\nimport { VColorPickerPreview } from './VColorPickerPreview'\nimport { VColorPickerSwatches } from './VColorPickerSwatches'\nimport { makeVSheetProps, VSheet } from '@/components/VSheet/VSheet'\n\n// Composables\nimport { provideDefaults } from '@/composables/defaults'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { onMounted, ref } from 'vue'\nimport { extractColor, modes, nullColor } from './util'\nimport { consoleWarn, defineComponent, HSVtoCSS, omit, parseColor, propsFactory, RGBtoHSV, useRender } from '@/util'\n\n// Types\nimport type { DeepReadonly, PropType } from 'vue'\nimport type { Color, HSV } from '@/util'\n\nexport const makeVColorPickerProps = propsFactory({\n  canvasHeight: {\n    type: [String, Number],\n    default: 150,\n  },\n  disabled: Boolean,\n  dotSize: {\n    type: [Number, String],\n    default: 10,\n  },\n  hideCanvas: Boolean,\n  hideSliders: Boolean,\n  hideInputs: Boolean,\n  mode: {\n    type: String as PropType<keyof typeof modes>,\n    default: 'rgba',\n    validator: (v: string) => Object.keys(modes).includes(v),\n  },\n  modes: {\n    type: Array as PropType<readonly (keyof typeof modes)[]>,\n    default: () => Object.keys(modes),\n    validator: (v: any) => Array.isArray(v) && v.every(m => Object.keys(modes).includes(m)),\n  },\n  showSwatches: Boolean,\n  swatches: Array as PropType<DeepReadonly<Color[][]>>,\n  swatchesMaxHeight: {\n    type: [Number, String],\n    default: 150,\n  },\n  modelValue: {\n    type: [Object, String] as PropType<Record<string, unknown> | string | undefined | null>,\n  },\n\n  ...omit(makeVSheetProps({ width: 300 }), [\n    'height',\n    'location',\n    'minHeight',\n    'maxHeight',\n    'minWidth',\n    'maxWidth',\n  ]),\n}, 'VColorPicker')\n\nexport const VColorPicker = defineComponent({\n  name: 'VColorPicker',\n\n  props: makeVColorPickerProps(),\n\n  emits: {\n    'update:modelValue': (color: any) => true,\n    'update:mode': (mode: keyof typeof modes) => true,\n  },\n\n  setup (props) {\n    const mode = useProxiedModel(props, 'mode')\n    const lastPickedColor = ref<HSV | null>(null)\n    const currentColor = useProxiedModel(\n      props,\n      'modelValue',\n      undefined,\n      v => {\n        if (v == null || v === '') return null\n\n        let c: HSV\n        try {\n          c = RGBtoHSV(parseColor(v as any))\n        } catch (err) {\n          consoleWarn(err as any)\n          return null\n        }\n\n        if (lastPickedColor.value) {\n          c = { ...c, h: lastPickedColor.value.h }\n          lastPickedColor.value = null\n        }\n\n        return c\n      },\n      v => {\n        if (!v) return null\n\n        return extractColor(v, props.modelValue)\n      }\n    )\n    const { rtlClasses } = useRtl()\n\n    const updateColor = (hsva: HSV) => {\n      currentColor.value = hsva\n      lastPickedColor.value = hsva\n    }\n\n    onMounted(() => {\n      if (!props.modes.includes(mode.value)) mode.value = props.modes[0]\n    })\n\n    provideDefaults({\n      VSlider: {\n        color: undefined,\n        trackColor: undefined,\n        trackFillColor: undefined,\n      },\n    })\n\n    useRender(() => {\n      const sheetProps = VSheet.filterProps(props)\n\n      return (\n        <VSheet\n          rounded={ props.rounded }\n          elevation={ props.elevation }\n          theme={ props.theme }\n          class={[\n            'v-color-picker',\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            {\n              '--v-color-picker-color-hsv': HSVtoCSS({ ...(currentColor.value ?? nullColor), a: 1 }),\n            },\n            props.style,\n          ]}\n          { ...sheetProps }\n          maxWidth={ props.width }\n        >\n          { !props.hideCanvas && (\n            <VColorPickerCanvas\n              key=\"canvas\"\n              color={ currentColor.value }\n              onUpdate:color={ updateColor }\n              disabled={ props.disabled }\n              dotSize={ props.dotSize }\n              width={ props.width }\n              height={ props.canvasHeight }\n            />\n          )}\n\n          { (!props.hideSliders || !props.hideInputs) && (\n            <div key=\"controls\" class=\"v-color-picker__controls\">\n              { !props.hideSliders && (\n                <VColorPickerPreview\n                  key=\"preview\"\n                  color={ currentColor.value }\n                  onUpdate:color={ updateColor }\n                  hideAlpha={ !mode.value.endsWith('a') }\n                  disabled={ props.disabled }\n                />\n              )}\n\n              { !props.hideInputs && (\n                <VColorPickerEdit\n                  key=\"edit\"\n                  modes={ props.modes }\n                  mode={ mode.value }\n                  onUpdate:mode={ m => mode.value = m }\n                  color={ currentColor.value }\n                  onUpdate:color={ updateColor }\n                  disabled={ props.disabled }\n                />\n              )}\n            </div>\n          )}\n\n          { props.showSwatches && (\n            <VColorPickerSwatches\n              key=\"swatches\"\n              color={ currentColor.value }\n              onUpdate:color={ updateColor }\n              maxHeight={ props.swatchesMaxHeight }\n              swatches={ props.swatches }\n              disabled={ props.disabled }\n            />\n          )}\n        </VSheet>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VColorPicker = InstanceType<typeof VColorPicker>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}