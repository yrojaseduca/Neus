{"ast":null,"code":"import _toConsumableArray from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\";\nimport { VExpansionPanelText } from \"./VExpansionPanelText.mjs\";\nimport { makeVExpansionPanelTitleProps, VExpansionPanelTitle } from \"./VExpansionPanelTitle.mjs\"; // Composables\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLazyProps } from \"../../composables/lazy.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { computed, provide, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport var makeVExpansionPanelProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  title: String,\n  text: String,\n  bgColor: String\n}, makeComponentProps()), makeElevationProps()), makeGroupItemProps()), makeLazyProps()), makeRoundedProps()), makeTagProps()), makeVExpansionPanelTitleProps()), 'VExpansionPanel');\nexport var VExpansionPanel = genericComponent()({\n  name: 'VExpansionPanel',\n  props: makeVExpansionPanelProps(),\n  emits: {\n    'group:selected': function groupSelected(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var groupItem = useGroupItem(props, VExpansionPanelSymbol);\n    var _useBackgroundColor = useBackgroundColor(props, 'bgColor'),\n      backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n      backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n    var _useElevation = useElevation(props),\n      elevationClasses = _useElevation.elevationClasses;\n    var _useRounded = useRounded(props),\n      roundedClasses = _useRounded.roundedClasses;\n    var isDisabled = computed(function () {\n      return (groupItem === null || groupItem === void 0 ? void 0 : groupItem.disabled.value) || props.disabled;\n    });\n    var selectedIndices = computed(function () {\n      return groupItem.group.items.value.reduce(function (arr, item, index) {\n        if (groupItem.group.selected.value.includes(item.id)) arr.push(index);\n        return arr;\n      }, []);\n    });\n    var isBeforeSelected = computed(function () {\n      var index = groupItem.group.items.value.findIndex(function (item) {\n        return item.id === groupItem.id;\n      });\n      return !groupItem.isSelected.value && selectedIndices.value.some(function (selectedIndex) {\n        return selectedIndex - index === 1;\n      });\n    });\n    var isAfterSelected = computed(function () {\n      var index = groupItem.group.items.value.findIndex(function (item) {\n        return item.id === groupItem.id;\n      });\n      return !groupItem.isSelected.value && selectedIndices.value.some(function (selectedIndex) {\n        return selectedIndex - index === -1;\n      });\n    });\n    provide(VExpansionPanelSymbol, groupItem);\n    provideDefaults({\n      VExpansionPanelText: {\n        eager: toRef(props, 'eager')\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly')\n      }\n    });\n    useRender(function () {\n      var hasText = !!(slots.text || props.text);\n      var hasTitle = !!(slots.title || props.title);\n      return _createVNode(props.tag, {\n        \"class\": ['v-expansion-panel', {\n          'v-expansion-panel--active': groupItem.isSelected.value,\n          'v-expansion-panel--before-active': isBeforeSelected.value,\n          'v-expansion-panel--after-active': isAfterSelected.value,\n          'v-expansion-panel--disabled': isDisabled.value\n        }, roundedClasses.value, backgroundColorClasses.value, props[\"class\"]],\n        \"style\": [backgroundColorStyles.value, props.style]\n      }, {\n        \"default\": function _default() {\n          var _slots$default;\n          return [_createVNode(\"div\", {\n            \"class\": ['v-expansion-panel__shadow'].concat(_toConsumableArray(elevationClasses.value))\n          }, null), hasTitle && _createVNode(VExpansionPanelTitle, {\n            \"key\": \"title\",\n            \"collapseIcon\": props.collapseIcon,\n            \"color\": props.color,\n            \"expandIcon\": props.expandIcon,\n            \"hideActions\": props.hideActions,\n            \"ripple\": props.ripple\n          }, {\n            \"default\": function _default() {\n              return [slots.title ? slots.title() : props.title];\n            }\n          }), hasText && _createVNode(VExpansionPanelText, {\n            \"key\": \"text\"\n          }, {\n            \"default\": function _default() {\n              return [slots.text ? slots.text() : props.text];\n            }\n          }), (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VExpansionPanelSymbol","VExpansionPanelText","makeVExpansionPanelTitleProps","VExpansionPanelTitle","useBackgroundColor","makeComponentProps","provideDefaults","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makeLazyProps","makeRoundedProps","useRounded","makeTagProps","computed","provide","toRef","genericComponent","propsFactory","useRender","makeVExpansionPanelProps","_objectSpread","title","String","text","bgColor","VExpansionPanel","name","props","emits","groupSelected","val","setup","_ref","slots","groupItem","_useBackgroundColor","backgroundColorClasses","backgroundColorStyles","_useElevation","elevationClasses","_useRounded","roundedClasses","isDisabled","disabled","value","selectedIndices","group","items","reduce","arr","item","index","selected","includes","id","push","isBeforeSelected","findIndex","isSelected","some","selectedIndex","isAfterSelected","eager","readonly","hasText","hasTitle","_createVNode","tag","style","_default","_slots$default","concat","_toConsumableArray","collapseIcon","color","expandIcon","hideActions","ripple","call"],"sources":["../../../src/components/VExpansionPanel/VExpansionPanel.tsx"],"sourcesContent":["// Components\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\nimport { VExpansionPanelText } from './VExpansionPanelText'\nimport { makeVExpansionPanelTitleProps, VExpansionPanelTitle } from './VExpansionPanelTitle'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLazyProps } from '@/composables/lazy'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, provide, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVExpansionPanelProps = propsFactory({\n  title: String,\n  text: String,\n  bgColor: String,\n\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeLazyProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeVExpansionPanelTitleProps(),\n}, 'VExpansionPanel')\n\nexport type VExpansionPanelSlots = {\n  default: never\n  title: never\n  text: never\n}\n\nexport const VExpansionPanel = genericComponent<VExpansionPanelSlots>()({\n  name: 'VExpansionPanel',\n\n  props: makeVExpansionPanelProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const groupItem = useGroupItem(props, VExpansionPanelSymbol)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'bgColor')\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const isDisabled = computed(() => groupItem?.disabled.value || props.disabled)\n\n    const selectedIndices = computed(() => groupItem.group.items.value.reduce<number[]>((arr, item, index) => {\n      if (groupItem.group.selected.value.includes(item.id)) arr.push(index)\n      return arr\n    }, []))\n\n    const isBeforeSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id)\n      return !groupItem.isSelected.value &&\n        selectedIndices.value.some(selectedIndex => selectedIndex - index === 1)\n    })\n\n    const isAfterSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id)\n      return !groupItem.isSelected.value &&\n        selectedIndices.value.some(selectedIndex => selectedIndex - index === -1)\n    })\n\n    provide(VExpansionPanelSymbol, groupItem)\n\n    provideDefaults({\n      VExpansionPanelText: {\n        eager: toRef(props, 'eager'),\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly'),\n      },\n    })\n\n    useRender(() => {\n      const hasText = !!(slots.text || props.text)\n      const hasTitle = !!(slots.title || props.title)\n\n      return (\n        <props.tag\n          class={[\n            'v-expansion-panel',\n            {\n              'v-expansion-panel--active': groupItem.isSelected.value,\n              'v-expansion-panel--before-active': isBeforeSelected.value,\n              'v-expansion-panel--after-active': isAfterSelected.value,\n              'v-expansion-panel--disabled': isDisabled.value,\n            },\n            roundedClasses.value,\n            backgroundColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            class={[\n              'v-expansion-panel__shadow',\n              ...elevationClasses.value,\n            ]}\n          />\n\n          { hasTitle && (\n            <VExpansionPanelTitle\n              key=\"title\"\n              collapseIcon={ props.collapseIcon }\n              color={ props.color }\n              expandIcon={ props.expandIcon }\n              hideActions={ props.hideActions }\n              ripple={ props.ripple }\n            >\n              { slots.title ? slots.title() : props.title }\n            </VExpansionPanelTitle>\n          )}\n\n          { hasText && (\n            <VExpansionPanelText key=\"text\">\n              { slots.text ? slots.text() : props.text }\n            </VExpansionPanelText>\n          )}\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VExpansionPanel = InstanceType<typeof VExpansionPanel>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}