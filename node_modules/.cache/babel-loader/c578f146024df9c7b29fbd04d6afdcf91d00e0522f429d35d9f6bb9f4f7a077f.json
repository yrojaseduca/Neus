{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSkeletonLoader.css\";\n\n// Composables\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport var rootTypes = {\n  actions: 'button@2',\n  article: 'heading, paragraph',\n  avatar: 'avatar',\n  button: 'button',\n  card: 'image, heading',\n  'card-avatar': 'image, list-item-avatar',\n  chip: 'chip',\n  'date-picker': 'list-item, heading, divider, date-picker-options, date-picker-days, actions',\n  'date-picker-options': 'text, avatar@2',\n  'date-picker-days': 'avatar@28',\n  divider: 'divider',\n  heading: 'heading',\n  image: 'image',\n  'list-item': 'text',\n  'list-item-avatar': 'avatar, text',\n  'list-item-two-line': 'sentences',\n  'list-item-avatar-two-line': 'avatar, sentences',\n  'list-item-three-line': 'paragraph',\n  'list-item-avatar-three-line': 'avatar, paragraph',\n  ossein: 'ossein',\n  paragraph: 'text@3',\n  sentences: 'text@2',\n  subtitle: 'text',\n  table: 'table-heading, table-thead, table-tbody, table-tfoot',\n  'table-heading': 'chip, text',\n  'table-thead': 'heading@6',\n  'table-tbody': 'table-row-divider@6',\n  'table-row-divider': 'table-row, divider',\n  'table-row': 'text@6',\n  'table-tfoot': 'text@2, avatar@2',\n  text: 'text'\n};\nfunction genBone(type) {\n  var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return _createVNode(\"div\", {\n    \"class\": ['v-skeleton-loader__bone', \"v-skeleton-loader__\".concat(type)]\n  }, [children]);\n}\nfunction genBones(bone) {\n  // e.g. 'text@3'\n  var _bone$split = bone.split('@'),\n    _bone$split2 = _slicedToArray(_bone$split, 2),\n    type = _bone$split2[0],\n    length = _bone$split2[1];\n\n  // Generate a length array based upon\n  // value after @ in the bone string\n  return Array.from({\n    length: length\n  }).map(function () {\n    return genStructure(type);\n  });\n}\nfunction genStructure(type) {\n  var children = [];\n  if (!type) return children;\n\n  // TODO: figure out a better way to type this\n  var bone = rootTypes[type];\n\n  // End of recursion, do nothing\n  /* eslint-disable-next-line no-empty, brace-style */\n  if (type === bone) {}\n  // Array of values - e.g. 'heading, paragraph, text@2'\n  else if (type.includes(',')) return mapBones(type);\n  // Array of values - e.g. 'paragraph@4'\n  else if (type.includes('@')) return genBones(type);\n  // Array of values - e.g. 'card@2'\n  else if (bone.includes(',')) children = mapBones(bone);\n  // Array of values - e.g. 'list-item@2'\n  else if (bone.includes('@')) children = genBones(bone);\n  // Single value - e.g. 'card-heading'\n  else if (bone) children.push(genStructure(bone));\n  return [genBone(type, children)];\n}\nfunction mapBones(bones) {\n  // Remove spaces and return array of structures\n  return bones.replace(/\\s/g, '').split(',').map(genStructure);\n}\nexport var makeVSkeletonLoaderProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({\n  boilerplate: Boolean,\n  color: String,\n  loading: Boolean,\n  loadingText: {\n    type: String,\n    \"default\": '$vuetify.loading'\n  },\n  type: {\n    type: [String, Array],\n    \"default\": 'ossein'\n  }\n}, makeDimensionProps()), makeElevationProps()), makeThemeProps()), 'VSkeletonLoader');\nexport var VSkeletonLoader = genericComponent()({\n  name: 'VSkeletonLoader',\n  props: makeVSkeletonLoaderProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useBackgroundColor = useBackgroundColor(toRef(props, 'color')),\n      backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n      backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n    var _useDimension = useDimension(props),\n      dimensionStyles = _useDimension.dimensionStyles;\n    var _useElevation = useElevation(props),\n      elevationClasses = _useElevation.elevationClasses;\n    var _provideTheme = provideTheme(props),\n      themeClasses = _provideTheme.themeClasses;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var items = computed(function () {\n      return genStructure(wrapInArray(props.type).join(','));\n    });\n    useRender(function () {\n      var _slots$default;\n      var isLoading = !slots[\"default\"] || props.loading;\n      return _createVNode(\"div\", {\n        \"class\": ['v-skeleton-loader', {\n          'v-skeleton-loader--boilerplate': props.boilerplate\n        }, themeClasses.value, backgroundColorClasses.value, elevationClasses.value],\n        \"style\": [backgroundColorStyles.value, isLoading ? dimensionStyles.value : {}],\n        \"aria-busy\": !props.boilerplate ? isLoading : undefined,\n        \"aria-live\": !props.boilerplate ? 'polite' : undefined,\n        \"aria-label\": !props.boilerplate ? t(props.loadingText) : undefined,\n        \"role\": !props.boilerplate ? 'alert' : undefined\n      }, [isLoading ? items.value : (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)]);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["useBackgroundColor","makeDimensionProps","useDimension","makeElevationProps","useElevation","useLocale","makeThemeProps","provideTheme","computed","toRef","genericComponent","propsFactory","useRender","wrapInArray","rootTypes","actions","article","avatar","button","card","chip","divider","heading","image","ossein","paragraph","sentences","subtitle","table","text","genBone","type","children","arguments","length","undefined","_createVNode","concat","genBones","bone","_bone$split","split","_bone$split2","_slicedToArray","Array","from","map","genStructure","includes","mapBones","push","bones","replace","makeVSkeletonLoaderProps","_objectSpread","boilerplate","Boolean","color","String","loading","loadingText","VSkeletonLoader","name","props","setup","_ref","slots","_useBackgroundColor","backgroundColorClasses","backgroundColorStyles","_useDimension","dimensionStyles","_useElevation","elevationClasses","_provideTheme","themeClasses","_useLocale","t","items","join","_slots$default","isLoading","value","call"],"sources":["../../../src/components/VSkeletonLoader/VSkeletonLoader.tsx"],"sourcesContent":["// Styles\nimport './VSkeletonLoader.sass'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { useLocale } from '@/composables/locale'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType, VNode } from 'vue'\n\ntype VSkeletonBone<T> = T | VSkeletonBone<T>[]\n\nexport type VSkeletonBones = VSkeletonBone<VNode>\nexport type VSkeletonLoaderType = keyof typeof rootTypes\n\nexport const rootTypes = {\n  actions: 'button@2',\n  article: 'heading, paragraph',\n  avatar: 'avatar',\n  button: 'button',\n  card: 'image, heading',\n  'card-avatar': 'image, list-item-avatar',\n  chip: 'chip',\n  'date-picker': 'list-item, heading, divider, date-picker-options, date-picker-days, actions',\n  'date-picker-options': 'text, avatar@2',\n  'date-picker-days': 'avatar@28',\n  divider: 'divider',\n  heading: 'heading',\n  image: 'image',\n  'list-item': 'text',\n  'list-item-avatar': 'avatar, text',\n  'list-item-two-line': 'sentences',\n  'list-item-avatar-two-line': 'avatar, sentences',\n  'list-item-three-line': 'paragraph',\n  'list-item-avatar-three-line': 'avatar, paragraph',\n  ossein: 'ossein',\n  paragraph: 'text@3',\n  sentences: 'text@2',\n  subtitle: 'text',\n  table: 'table-heading, table-thead, table-tbody, table-tfoot',\n  'table-heading': 'chip, text',\n  'table-thead': 'heading@6',\n  'table-tbody': 'table-row-divider@6',\n  'table-row-divider': 'table-row, divider',\n  'table-row': 'text@6',\n  'table-tfoot': 'text@2, avatar@2',\n  text: 'text',\n} as const\n\nfunction genBone (type: string, children: VSkeletonBones = []) {\n  return (\n    <div\n      class={[\n        'v-skeleton-loader__bone',\n        `v-skeleton-loader__${type}`,\n      ]}\n    >\n      { children }\n    </div>\n  )\n}\n\nfunction genBones (bone: string) {\n  // e.g. 'text@3'\n  const [type, length] = bone.split('@') as [VSkeletonLoaderType, number]\n\n  // Generate a length array based upon\n  // value after @ in the bone string\n  return Array.from({ length }).map(() => genStructure(type))\n}\n\nfunction genStructure (type?: string): VSkeletonBones {\n  let children: VSkeletonBones = []\n\n  if (!type) return children\n\n  // TODO: figure out a better way to type this\n  const bone = (rootTypes as Record<string, string>)[type]\n\n  // End of recursion, do nothing\n  /* eslint-disable-next-line no-empty, brace-style */\n  if (type === bone) {}\n  // Array of values - e.g. 'heading, paragraph, text@2'\n  else if (type.includes(',')) return mapBones(type)\n  // Array of values - e.g. 'paragraph@4'\n  else if (type.includes('@')) return genBones(type)\n  // Array of values - e.g. 'card@2'\n  else if (bone.includes(',')) children = mapBones(bone)\n  // Array of values - e.g. 'list-item@2'\n  else if (bone.includes('@')) children = genBones(bone)\n  // Single value - e.g. 'card-heading'\n  else if (bone) children.push(genStructure(bone))\n\n  return [genBone(type, children)]\n}\n\nfunction mapBones (bones: string) {\n  // Remove spaces and return array of structures\n  return bones.replace(/\\s/g, '').split(',').map(genStructure)\n}\n\nexport const makeVSkeletonLoaderProps = propsFactory({\n  boilerplate: Boolean,\n  color: String,\n  loading: Boolean,\n  loadingText: {\n    type: String,\n    default: '$vuetify.loading',\n  },\n  type: {\n    type: [String, Array] as PropType<\n      | VSkeletonLoaderType | (string & {})\n      | ReadonlyArray<VSkeletonLoaderType | (string & {})>\n    >,\n    default: 'ossein',\n  },\n\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeThemeProps(),\n}, 'VSkeletonLoader')\n\nexport const VSkeletonLoader = genericComponent()({\n  name: 'VSkeletonLoader',\n\n  props: makeVSkeletonLoaderProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { themeClasses } = provideTheme(props)\n    const { t } = useLocale()\n\n    const items = computed(() => genStructure(wrapInArray(props.type).join(',')))\n\n    useRender(() => {\n      const isLoading = !slots.default || props.loading\n\n      return (\n        <div\n          class={[\n            'v-skeleton-loader',\n            {\n              'v-skeleton-loader--boilerplate': props.boilerplate,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            elevationClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            isLoading ? dimensionStyles.value : {},\n          ]}\n          aria-busy={ !props.boilerplate ? isLoading : undefined }\n          aria-live={ !props.boilerplate ? 'polite' : undefined }\n          aria-label={ !props.boilerplate ? t(props.loadingText) : undefined }\n          role={ !props.boilerplate ? 'alert' : undefined }\n        >\n          { isLoading ? items.value : slots.default?.() }\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSkeletonLoader = InstanceType<typeof VSkeletonLoader>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}