{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VRadioGroup.css\";\n\n// Components\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VLabel } from \"../VLabel/index.mjs\";\nimport { VSelectionControl } from \"../VSelectionControl/index.mjs\";\nimport { makeSelectionControlGroupProps, VSelectionControlGroup } from \"../VSelectionControlGroup/VSelectionControlGroup.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, omit, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVRadioGroupProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({\n  height: {\n    type: [Number, String],\n    \"default\": 'auto'\n  }\n}, makeVInputProps()), omit(makeSelectionControlGroupProps(), ['multiple'])), {}, {\n  trueIcon: {\n    type: IconValue,\n    \"default\": '$radioOn'\n  },\n  falseIcon: {\n    type: IconValue,\n    \"default\": '$radioOff'\n  },\n  type: {\n    type: String,\n    \"default\": 'radio'\n  }\n}), 'VRadioGroup');\nexport var VRadioGroup = genericComponent()({\n  name: 'VRadioGroup',\n  inheritAttrs: false,\n  props: makeVRadioGroupProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      slots = _ref.slots;\n    var uid = getUid();\n    var id = computed(function () {\n      return props.id || \"radio-group-\".concat(uid);\n    });\n    var model = useProxiedModel(props, 'modelValue');\n    useRender(function () {\n      var _filterInputAttrs = filterInputAttrs(attrs),\n        _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n        rootAttrs = _filterInputAttrs2[0],\n        controlAttrs = _filterInputAttrs2[1];\n      var inputProps = VInput.filterProps(props);\n      var controlProps = VSelectionControl.filterProps(props);\n      var label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          \"for\": id.value\n        }\n      }) : props.label;\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-radio-group', props[\"class\"]],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"id\": id.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        \"default\": function _default(_ref2) {\n          var id = _ref2.id,\n            messagesId = _ref2.messagesId,\n            isDisabled = _ref2.isDisabled,\n            isReadonly = _ref2.isReadonly;\n          return _createVNode(_Fragment, null, [label && _createVNode(VLabel, {\n            \"id\": id.value\n          }, {\n            \"default\": function _default() {\n              return [label];\n            }\n          }), _createVNode(VSelectionControlGroup, _mergeProps(controlProps, {\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"defaultsTarget\": \"VRadio\",\n            \"trueIcon\": props.trueIcon,\n            \"falseIcon\": props.falseIcon,\n            \"type\": props.type,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value,\n            \"aria-labelledby\": label ? id.value : undefined,\n            \"multiple\": false\n          }, controlAttrs, {\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n              return model.value = $event;\n            }\n          }), slots)]);\n        }\n      }));\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["makeVInputProps","VInput","VLabel","VSelectionControl","makeSelectionControlGroupProps","VSelectionControlGroup","IconValue","useProxiedModel","computed","filterInputAttrs","genericComponent","getUid","omit","propsFactory","useRender","makeVRadioGroupProps","_objectSpread","height","type","Number","String","trueIcon","falseIcon","VRadioGroup","name","inheritAttrs","props","emits","updateModelValue","value","setup","_ref","attrs","slots","uid","id","concat","model","_filterInputAttrs","_filterInputAttrs2","_slicedToArray","rootAttrs","controlAttrs","inputProps","filterProps","controlProps","label","_createVNode","_mergeProps","style","onUpdateModelValue","$event","_default","_ref2","messagesId","isDisabled","isReadonly","_Fragment","undefined"],"sources":["../../../src/components/VRadioGroup/VRadioGroup.tsx"],"sourcesContent":["// Styles\nimport './VRadioGroup.sass'\n\n// Components\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VLabel } from '@/components/VLabel'\nimport { VSelectionControl } from '@/components/VSelectionControl'\nimport { makeSelectionControlGroupProps, VSelectionControlGroup } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { filterInputAttrs, genericComponent, getUid, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { GenericProps } from '@/util'\n\nexport type VRadioGroupSlots = Omit<VInputSlots, 'default'> & {\n  default: never\n  label: {\n    label: string | undefined\n    props: Record<string, any>\n  }\n}\n\nexport const makeVRadioGroupProps = propsFactory({\n  height: {\n    type: [Number, String],\n    default: 'auto',\n  },\n\n  ...makeVInputProps(),\n  ...omit(makeSelectionControlGroupProps(), ['multiple']),\n\n  trueIcon: {\n    type: IconValue,\n    default: '$radioOn',\n  },\n  falseIcon: {\n    type: IconValue,\n    default: '$radioOff',\n  },\n  type: {\n    type: String,\n    default: 'radio',\n  },\n}, 'VRadioGroup')\n\nexport const VRadioGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VRadioGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VRadioGroup',\n\n  inheritAttrs: false,\n\n  props: makeVRadioGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const uid = getUid()\n    const id = computed(() => props.id || `radio-group-${uid}`)\n    const model = useProxiedModel(props, 'modelValue')\n\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const inputProps = VInput.filterProps(props)\n      const controlProps = VSelectionControl.filterProps(props)\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n\n      return (\n        <VInput\n          class={[\n            'v-radio-group',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...rootAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ id.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n            }) => (\n              <>\n                { label && (\n                  <VLabel id={ id.value }>\n                    { label }\n                  </VLabel>\n                )}\n\n                <VSelectionControlGroup\n                  { ...controlProps }\n                  id={ id.value }\n                  aria-describedby={ messagesId.value }\n                  defaultsTarget=\"VRadio\"\n                  trueIcon={ props.trueIcon }\n                  falseIcon={ props.falseIcon }\n                  type={ props.type }\n                  disabled={ isDisabled.value }\n                  readonly={ isReadonly.value }\n                  aria-labelledby={ label ? id.value : undefined }\n                  multiple={ false }\n                  { ...controlAttrs }\n                  v-model={ model.value }\n                  v-slots={ slots }\n                />\n              </>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRadioGroup = InstanceType<typeof VRadioGroup>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}