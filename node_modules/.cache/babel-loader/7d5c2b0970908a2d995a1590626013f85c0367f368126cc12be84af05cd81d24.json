{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VSlider.css\";\n\n// Components\nimport { VSliderThumb } from \"./VSliderThumb.mjs\";\nimport { VSliderTrack } from \"./VSliderTrack.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VLabel } from \"../VLabel/index.mjs\"; // Composables\nimport { makeSliderProps, useSlider, useSteps } from \"./slider.mjs\";\nimport { makeFocusProps, useFocus } from \"../../composables/focus.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVSliderProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, makeFocusProps()), makeSliderProps()), makeVInputProps()), {}, {\n  modelValue: {\n    type: [Number, String],\n    \"default\": 0\n  }\n}), 'VSlider');\nexport var VSlider = genericComponent()({\n  name: 'VSlider',\n  props: makeVSliderProps(),\n  emits: {\n    'update:focused': function updateFocused(value) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(v) {\n      return true;\n    },\n    start: function start(value) {\n      return true;\n    },\n    end: function end(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      emit = _ref.emit;\n    var thumbContainerRef = ref();\n    var _useRtl = useRtl(),\n      rtlClasses = _useRtl.rtlClasses;\n    var steps = useSteps(props);\n    var model = useProxiedModel(props, 'modelValue', undefined, function (value) {\n      return steps.roundValue(value == null ? steps.min.value : value);\n    });\n    var _useSlider = useSlider({\n        props: props,\n        steps: steps,\n        onSliderStart: function onSliderStart() {\n          emit('start', model.value);\n        },\n        onSliderEnd: function onSliderEnd(_ref2) {\n          var value = _ref2.value;\n          var roundedValue = roundValue(value);\n          model.value = roundedValue;\n          emit('end', roundedValue);\n        },\n        onSliderMove: function onSliderMove(_ref3) {\n          var value = _ref3.value;\n          return model.value = roundValue(value);\n        },\n        getActiveThumb: function getActiveThumb() {\n          var _thumbContainerRef$va;\n          return (_thumbContainerRef$va = thumbContainerRef.value) === null || _thumbContainerRef$va === void 0 ? void 0 : _thumbContainerRef$va.$el;\n        }\n      }),\n      min = _useSlider.min,\n      max = _useSlider.max,\n      mousePressed = _useSlider.mousePressed,\n      roundValue = _useSlider.roundValue,\n      onSliderMousedown = _useSlider.onSliderMousedown,\n      onSliderTouchstart = _useSlider.onSliderTouchstart,\n      trackContainerRef = _useSlider.trackContainerRef,\n      position = _useSlider.position,\n      hasLabels = _useSlider.hasLabels,\n      readonly = _useSlider.readonly;\n    var _useFocus = useFocus(props),\n      isFocused = _useFocus.isFocused,\n      focus = _useFocus.focus,\n      blur = _useFocus.blur;\n    var trackStop = computed(function () {\n      return position(model.value);\n    });\n    useRender(function () {\n      var inputProps = VInput.filterProps(props);\n      var hasPrepend = !!(props.label || slots.label || slots.prepend);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-slider', {\n          'v-slider--has-labels': !!slots['tick-label'] || hasLabels.value,\n          'v-slider--focused': isFocused.value,\n          'v-slider--pressed': mousePressed.value,\n          'v-slider--disabled': props.disabled\n        }, rtlClasses.value, props[\"class\"]],\n        \"style\": props.style\n      }, inputProps, {\n        \"focused\": isFocused.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        prepend: hasPrepend ? function (slotProps) {\n          var _slots$label, _slots$label2, _slots$prepend;\n          return _createVNode(_Fragment, null, [(_slots$label = (_slots$label2 = slots.label) === null || _slots$label2 === void 0 ? void 0 : _slots$label2.call(slots, slotProps)) !== null && _slots$label !== void 0 ? _slots$label : props.label ? _createVNode(VLabel, {\n            \"id\": slotProps.id.value,\n            \"class\": \"v-slider__label\",\n            \"text\": props.label\n          }, null) : undefined, (_slots$prepend = slots.prepend) === null || _slots$prepend === void 0 ? void 0 : _slots$prepend.call(slots, slotProps)]);\n        } : undefined,\n        \"default\": function _default(_ref4) {\n          var id = _ref4.id,\n            messagesId = _ref4.messagesId;\n          return _createVNode(\"div\", {\n            \"class\": \"v-slider__container\",\n            \"onMousedown\": !readonly.value ? onSliderMousedown : undefined,\n            \"onTouchstartPassive\": !readonly.value ? onSliderTouchstart : undefined\n          }, [_createVNode(\"input\", {\n            \"id\": id.value,\n            \"name\": props.name || id.value,\n            \"disabled\": !!props.disabled,\n            \"readonly\": !!props.readonly,\n            \"tabindex\": \"-1\",\n            \"value\": model.value\n          }, null), _createVNode(VSliderTrack, {\n            \"ref\": trackContainerRef,\n            \"start\": 0,\n            \"stop\": trackStop.value\n          }, {\n            'tick-label': slots['tick-label']\n          }), _createVNode(VSliderThumb, {\n            \"ref\": thumbContainerRef,\n            \"aria-describedby\": messagesId.value,\n            \"focused\": isFocused.value,\n            \"min\": min.value,\n            \"max\": max.value,\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": function onUpdateModelValue(v) {\n              return model.value = v;\n            },\n            \"position\": trackStop.value,\n            \"elevation\": props.elevation,\n            \"onFocus\": focus,\n            \"onBlur\": blur,\n            \"ripple\": props.ripple\n          }, {\n            'thumb-label': slots['thumb-label']\n          })]);\n        }\n      }));\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VSliderThumb","VSliderTrack","makeVInputProps","VInput","VLabel","makeSliderProps","useSlider","useSteps","makeFocusProps","useFocus","useRtl","useProxiedModel","computed","ref","genericComponent","propsFactory","useRender","makeVSliderProps","_objectSpread","modelValue","type","Number","String","VSlider","name","props","emits","updateFocused","value","updateModelValue","v","start","end","setup","_ref","slots","emit","thumbContainerRef","_useRtl","rtlClasses","steps","model","undefined","roundValue","min","_useSlider","onSliderStart","onSliderEnd","_ref2","roundedValue","onSliderMove","_ref3","getActiveThumb","_thumbContainerRef$va","$el","max","mousePressed","onSliderMousedown","onSliderTouchstart","trackContainerRef","position","hasLabels","readonly","_useFocus","isFocused","focus","blur","trackStop","inputProps","filterProps","hasPrepend","label","prepend","_createVNode","_mergeProps","disabled","style","slotProps","_slots$label","_slots$label2","_slots$prepend","_Fragment","call","id","_default","_ref4","messagesId","onUpdateModelValue","elevation","ripple"],"sources":["../../../src/components/VSlider/VSlider.tsx"],"sourcesContent":["// Styles\nimport './VSlider.sass'\n\n// Components\nimport { VSliderThumb } from './VSliderThumb'\nimport { VSliderTrack } from './VSliderTrack'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VLabel } from '@/components/VLabel'\n\n// Composables\nimport { makeSliderProps, useSlider, useSteps } from './slider'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSliderThumbSlots } from './VSliderThumb'\nimport type { VSliderTrackSlots } from './VSliderTrack'\nimport type { VInputSlot, VInputSlots } from '@/components/VInput/VInput'\n\nexport type VSliderSlots = VInputSlots & VSliderThumbSlots & VSliderTrackSlots & {\n  label: VInputSlot\n}\n\nexport const makeVSliderProps = propsFactory({\n  ...makeFocusProps(),\n  ...makeSliderProps(),\n  ...makeVInputProps(),\n\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n}, 'VSlider')\n\nexport const VSlider = genericComponent<VSliderSlots>()({\n  name: 'VSlider',\n\n  props: makeVSliderProps(),\n\n  emits: {\n    'update:focused': (value: boolean) => true,\n    'update:modelValue': (v: number) => true,\n    start: (value: number) => true,\n    end: (value: number) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const thumbContainerRef = ref()\n    const { rtlClasses } = useRtl()\n\n    const steps = useSteps(props)\n\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      undefined,\n      value => {\n        return steps.roundValue(value == null ? steps.min.value : value)\n      },\n    )\n\n    const {\n      min,\n      max,\n      mousePressed,\n      roundValue,\n      onSliderMousedown,\n      onSliderTouchstart,\n      trackContainerRef,\n      position,\n      hasLabels,\n      readonly,\n    } = useSlider({\n      props,\n      steps,\n      onSliderStart: () => {\n        emit('start', model.value)\n      },\n      onSliderEnd: ({ value }) => {\n        const roundedValue = roundValue(value)\n        model.value = roundedValue\n        emit('end', roundedValue)\n      },\n      onSliderMove: ({ value }) => model.value = roundValue(value),\n      getActiveThumb: () => thumbContainerRef.value?.$el,\n    })\n\n    const { isFocused, focus, blur } = useFocus(props)\n    const trackStop = computed(() => position(model.value))\n\n    useRender(() => {\n      const inputProps = VInput.filterProps(props)\n      const hasPrepend = !!(props.label || slots.label || slots.prepend)\n\n      return (\n        <VInput\n          class={[\n            'v-slider',\n            {\n              'v-slider--has-labels': !!slots['tick-label'] || hasLabels.value,\n              'v-slider--focused': isFocused.value,\n              'v-slider--pressed': mousePressed.value,\n              'v-slider--disabled': props.disabled,\n            },\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n          { ...inputProps }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            prepend: hasPrepend ? slotProps => (\n              <>\n                { slots.label?.(slotProps) ?? (\n                  props.label\n                    ? (\n                      <VLabel\n                        id={ slotProps.id.value }\n                        class=\"v-slider__label\"\n                        text={ props.label }\n                      />\n                    ) : undefined\n                )}\n\n                { slots.prepend?.(slotProps) }\n              </>\n            ) : undefined,\n            default: ({ id, messagesId }) => (\n              <div\n                class=\"v-slider__container\"\n                onMousedown={ !readonly.value ? onSliderMousedown : undefined }\n                onTouchstartPassive={ !readonly.value ? onSliderTouchstart : undefined }\n              >\n                <input\n                  id={ id.value }\n                  name={ props.name || id.value }\n                  disabled={ !!props.disabled }\n                  readonly={ !!props.readonly }\n                  tabindex=\"-1\"\n                  value={ model.value }\n                />\n\n                <VSliderTrack\n                  ref={ trackContainerRef }\n                  start={ 0 }\n                  stop={ trackStop.value }\n                >\n                  {{ 'tick-label': slots['tick-label'] }}\n                </VSliderTrack>\n\n                <VSliderThumb\n                  ref={ thumbContainerRef }\n                  aria-describedby={ messagesId.value }\n                  focused={ isFocused.value }\n                  min={ min.value }\n                  max={ max.value }\n                  modelValue={ model.value }\n                  onUpdate:modelValue={ v => (model.value = v) }\n                  position={ trackStop.value }\n                  elevation={ props.elevation }\n                  onFocus={ focus }\n                  onBlur={ blur }\n                  ripple={ props.ripple }\n                >\n                  {{ 'thumb-label': slots['thumb-label'] }}\n                </VSliderThumb>\n              </div>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSlider = InstanceType<typeof VSlider>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}