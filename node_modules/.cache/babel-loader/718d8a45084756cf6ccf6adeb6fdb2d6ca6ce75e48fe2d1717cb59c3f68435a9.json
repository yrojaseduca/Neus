{"ast":null,"code":"// Composables\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\"; // Utilities\nimport { VSlideGroupSymbol } from \"./VSlideGroup.mjs\";\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nexport var VSlideGroupItem = genericComponent()({\n  name: 'VSlideGroupItem',\n  props: makeGroupItemProps(),\n  emits: {\n    'group:selected': function groupSelected(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var slideGroupItem = useGroupItem(props, VSlideGroupSymbol);\n    return function () {\n      var _slots$default;\n      return (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, {\n        isSelected: slideGroupItem.isSelected.value,\n        select: slideGroupItem.select,\n        toggle: slideGroupItem.toggle,\n        selectedClass: slideGroupItem.selectedClass.value\n      });\n    };\n  }\n});","map":{"version":3,"names":["makeGroupItemProps","useGroupItem","VSlideGroupSymbol","genericComponent","VSlideGroupItem","name","props","emits","groupSelected","val","setup","_ref","slots","slideGroupItem","_slots$default","call","isSelected","value","select","toggle","selectedClass"],"sources":["../../../src/components/VSlideGroup/VSlideGroupItem.tsx"],"sourcesContent":["// Composables\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\n\n// Utilities\nimport { VSlideGroupSymbol } from './VSlideGroup'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { UnwrapRef } from 'vue'\nimport type { GroupItemProvide } from '@/composables/group'\n\ntype VSlideGroupItemSlots = {\n  default: {\n    isSelected: UnwrapRef<GroupItemProvide['isSelected']>\n    select: GroupItemProvide['select']\n    toggle: GroupItemProvide['toggle']\n    selectedClass: UnwrapRef<GroupItemProvide['selectedClass']>\n  }\n}\n\nexport const VSlideGroupItem = genericComponent<VSlideGroupItemSlots>()({\n  name: 'VSlideGroupItem',\n\n  props: makeGroupItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const slideGroupItem = useGroupItem(props, VSlideGroupSymbol)\n\n    return () => slots.default?.({\n      isSelected: slideGroupItem.isSelected.value,\n      select: slideGroupItem.select,\n      toggle: slideGroupItem.toggle,\n      selectedClass: slideGroupItem.selectedClass.value,\n    })\n  },\n})\n\nexport type VSlideGroupItem = InstanceType<typeof VSlideGroupItem>\n"],"mappings":"AAAA;AAAA,SACSA,kBAAkB,EAAEC,YAAY,uCAEzC;AAAA,SACSC,iBAAiB;AAAA,SACjBC,gBAAgB,gCAEzB;AAaA,OAAO,IAAMC,eAAe,GAAGD,gBAAgB,CAAuB,CAAC,CAAC;EACtEE,IAAI,EAAE,iBAAiB;EAEvBC,KAAK,EAAEN,kBAAkB,CAAC,CAAC;EAE3BO,KAAK,EAAE;IACL,gBAAgB,EAAG,SAAAC,cAAAC,GAAuB;MAAA,OAAK;IAAA;EACjD,CAAC;EAEDC,KAAK,WAAAA,MAAEJ,KAAK,EAAAK,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAMC,cAAc,GAAGZ,YAAY,CAACK,KAAK,EAAEJ,iBAAiB,CAAC;IAE7D,OAAO;MAAA,IAAAY,cAAA;MAAA,QAAAA,cAAA,GAAMF,KAAK,WAAQ,cAAAE,cAAA,uBAAbA,cAAA,CAAAC,IAAA,CAAAH,KAAK,EAAW;QAC3BI,UAAU,EAAEH,cAAc,CAACG,UAAU,CAACC,KAAK;QAC3CC,MAAM,EAAEL,cAAc,CAACK,MAAM;QAC7BC,MAAM,EAAEN,cAAc,CAACM,MAAM;QAC7BC,aAAa,EAAEP,cAAc,CAACO,aAAa,CAACH;MAC9C,CAAC,CAAC;IAAA;EACJ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}