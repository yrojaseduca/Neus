{"ast":null,"code":"import _defineProperty from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VBanner.css\";\n\n// Components\nimport { VBannerActions } from \"./VBannerActions.mjs\";\nimport { VBannerText } from \"./VBannerText.mjs\";\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeDisplayProps, useDisplay } from \"../../composables/display.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVBannerProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  avatar: String,\n  bgColor: String,\n  color: String,\n  icon: IconValue,\n  lines: String,\n  stacked: Boolean,\n  sticky: Boolean,\n  text: String\n}, makeBorderProps()), makeComponentProps()), makeDensityProps()), makeDimensionProps()), makeDisplayProps()), makeElevationProps()), makeLocationProps()), makePositionProps()), makeRoundedProps()), makeTagProps()), makeThemeProps()), 'VBanner');\nexport var VBanner = genericComponent()({\n  name: 'VBanner',\n  props: makeVBannerProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useBackgroundColor = useBackgroundColor(props, 'bgColor'),\n      backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n      backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n    var _useBorder = useBorder(props),\n      borderClasses = _useBorder.borderClasses;\n    var _useDensity = useDensity(props),\n      densityClasses = _useDensity.densityClasses;\n    var _useDisplay = useDisplay(props),\n      displayClasses = _useDisplay.displayClasses,\n      mobile = _useDisplay.mobile;\n    var _useDimension = useDimension(props),\n      dimensionStyles = _useDimension.dimensionStyles;\n    var _useElevation = useElevation(props),\n      elevationClasses = _useElevation.elevationClasses;\n    var _useLocation = useLocation(props),\n      locationStyles = _useLocation.locationStyles;\n    var _usePosition = usePosition(props),\n      positionClasses = _usePosition.positionClasses;\n    var _useRounded = useRounded(props),\n      roundedClasses = _useRounded.roundedClasses;\n    var _provideTheme = provideTheme(props),\n      themeClasses = _provideTheme.themeClasses;\n    var color = toRef(props, 'color');\n    var density = toRef(props, 'density');\n    provideDefaults({\n      VBannerActions: {\n        color: color,\n        density: density\n      }\n    });\n    useRender(function () {\n      var hasText = !!(props.text || slots.text);\n      var hasPrependMedia = !!(props.avatar || props.icon);\n      var hasPrepend = !!(hasPrependMedia || slots.prepend);\n      return _createVNode(props.tag, {\n        \"class\": ['v-banner', _defineProperty({\n          'v-banner--stacked': props.stacked || mobile.value,\n          'v-banner--sticky': props.sticky\n        }, \"v-banner--\".concat(props.lines, \"-line\"), !!props.lines), themeClasses.value, backgroundColorClasses.value, borderClasses.value, densityClasses.value, displayClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, props[\"class\"]],\n        \"style\": [backgroundColorStyles.value, dimensionStyles.value, locationStyles.value, props.style],\n        \"role\": \"banner\"\n      }, {\n        \"default\": function _default() {\n          var _slots$default;\n          return [hasPrepend && _createVNode(\"div\", {\n            \"key\": \"prepend\",\n            \"class\": \"v-banner__prepend\"\n          }, [!slots.prepend ? _createVNode(VAvatar, {\n            \"key\": \"prepend-avatar\",\n            \"color\": color.value,\n            \"density\": density.value,\n            \"icon\": props.icon,\n            \"image\": props.avatar\n          }, null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"prepend-defaults\",\n            \"disabled\": !hasPrependMedia,\n            \"defaults\": {\n              VAvatar: {\n                color: color.value,\n                density: density.value,\n                icon: props.icon,\n                image: props.avatar\n              }\n            }\n          }, slots.prepend)]), _createVNode(\"div\", {\n            \"class\": \"v-banner__content\"\n          }, [hasText && _createVNode(VBannerText, {\n            \"key\": \"text\"\n          }, {\n            \"default\": function _default() {\n              var _slots$text, _slots$text2;\n              return [(_slots$text = (_slots$text2 = slots.text) === null || _slots$text2 === void 0 ? void 0 : _slots$text2.call(slots)) !== null && _slots$text !== void 0 ? _slots$text : props.text];\n            }\n          }), (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)]), slots.actions && _createVNode(VBannerActions, {\n            \"key\": \"actions\"\n          }, slots.actions)];\n        }\n      });\n    });\n  }\n});","map":{"version":3,"names":["VBannerActions","VBannerText","VAvatar","VDefaultsProvider","makeBorderProps","useBorder","useBackgroundColor","makeComponentProps","provideDefaults","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeDisplayProps","useDisplay","makeElevationProps","useElevation","IconValue","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","toRef","genericComponent","propsFactory","useRender","makeVBannerProps","_objectSpread","avatar","String","bgColor","color","icon","lines","stacked","Boolean","sticky","text","VBanner","name","props","setup","_ref","slots","_useBackgroundColor","backgroundColorClasses","backgroundColorStyles","_useBorder","borderClasses","_useDensity","densityClasses","_useDisplay","displayClasses","mobile","_useDimension","dimensionStyles","_useElevation","elevationClasses","_useLocation","locationStyles","_usePosition","positionClasses","_useRounded","roundedClasses","_provideTheme","themeClasses","density","hasText","hasPrependMedia","hasPrepend","prepend","_createVNode","tag","_defineProperty","value","concat","style","_default","_slots$default","image","_slots$text","_slots$text2","call","actions"],"sources":["../../../src/components/VBanner/VBanner.tsx"],"sourcesContent":["// Styles\nimport './VBanner.sass'\n\n// Components\nimport { VBannerActions } from './VBannerActions'\nimport { VBannerText } from './VBannerText'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type VBannerSlots = {\n  default: never\n  prepend: never\n  text: never\n  actions: never\n}\n\nexport const makeVBannerProps = propsFactory({\n  avatar: String,\n  bgColor: String,\n  color: String,\n  icon: IconValue,\n  lines: String as PropType<'one' | 'two' | 'three'>,\n  stacked: Boolean,\n  sticky: Boolean,\n  text: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeDisplayProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VBanner')\n\nexport const VBanner = genericComponent<VBannerSlots>()({\n  name: 'VBanner',\n\n  props: makeVBannerProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'bgColor')\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { displayClasses, mobile } = useDisplay(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n\n    const { themeClasses } = provideTheme(props)\n\n    const color = toRef(props, 'color')\n    const density = toRef(props, 'density')\n\n    provideDefaults({ VBannerActions: { color, density } })\n\n    useRender(() => {\n      const hasText = !!(props.text || slots.text)\n      const hasPrependMedia = !!(props.avatar || props.icon)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n\n      return (\n        <props.tag\n          class={[\n            'v-banner',\n            {\n              'v-banner--stacked': props.stacked || mobile.value,\n              'v-banner--sticky': props.sticky,\n              [`v-banner--${props.lines}-line`]: !!props.lines,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            displayClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n            props.style,\n          ]}\n          role=\"banner\"\n        >\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-banner__prepend\">\n              { !slots.prepend ? (\n                <VAvatar\n                  key=\"prepend-avatar\"\n                  color={ color.value }\n                  density={ density.value }\n                  icon={ props.icon }\n                  image={ props.avatar }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      color: color.value,\n                      density: density.value,\n                      icon: props.icon,\n                      image: props.avatar,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-banner__content\">\n            { hasText && (\n              <VBannerText key=\"text\">\n                { slots.text?.() ?? props.text }\n              </VBannerText>\n            )}\n\n            { slots.default?.() }\n          </div>\n\n          { slots.actions && (\n            <VBannerActions key=\"actions\" v-slots:default={ slots.actions } />\n          )}\n        </props.tag>\n      )\n    })\n  },\n})\n\nexport type VBanner = InstanceType<typeof VBanner>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}