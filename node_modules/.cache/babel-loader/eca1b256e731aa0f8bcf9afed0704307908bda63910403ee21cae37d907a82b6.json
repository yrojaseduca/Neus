{"ast":null,"code":"import _createForOfIteratorHelper from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _typeof from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find.js\";\n// Utilities\nimport { computed } from 'vue';\nimport { deepEqual, getPropertyFromItem, omit, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport var makeItemsProps = propsFactory({\n  items: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  itemTitle: {\n    type: [String, Array, Function],\n    \"default\": 'title'\n  },\n  itemValue: {\n    type: [String, Array, Function],\n    \"default\": 'value'\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function],\n    \"default\": 'children'\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function],\n    \"default\": 'props'\n  },\n  returnObject: Boolean,\n  valueComparator: {\n    type: Function,\n    \"default\": deepEqual\n  }\n}, 'list-items');\nexport function transformItem(props, item) {\n  var _props$title;\n  var title = getPropertyFromItem(item, props.itemTitle, item);\n  var value = getPropertyFromItem(item, props.itemValue, title);\n  var children = getPropertyFromItem(item, props.itemChildren);\n  var itemProps = props.itemProps === true ? _typeof(item) === 'object' && item != null && !Array.isArray(item) ? 'children' in item ? omit(item, ['children']) : item : undefined : getPropertyFromItem(item, props.itemProps);\n  var _props = _objectSpread({\n    title: title,\n    value: value\n  }, itemProps);\n  return {\n    title: String((_props$title = _props.title) !== null && _props$title !== void 0 ? _props$title : ''),\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item\n  };\n}\nexport function transformItems(props, items) {\n  var array = [];\n  var _iterator = _createForOfIteratorHelper(items),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      array.push(transformItem(props, item));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return array;\n}\nexport function useItems(props) {\n  var items = computed(function () {\n    return transformItems(props, props.items);\n  });\n  var hasNullItem = computed(function () {\n    return items.value.some(function (item) {\n      return item.value === null;\n    });\n  });\n  function transformIn(value) {\n    if (!hasNullItem.value) {\n      // When the model value is null, return an InternalItem\n      // based on null only if null is one of the items\n      value = value.filter(function (v) {\n        return v !== null;\n      });\n    }\n    return value.map(function (v) {\n      if (props.returnObject && typeof v === 'string') {\n        // String model value means value is a custom input value from combobox\n        // Don't look up existing items if the model value is a string\n        return transformItem(props, v);\n      }\n      return items.value.find(function (item) {\n        return props.valueComparator(v, item.value);\n      }) || transformItem(props, v);\n    });\n  }\n  function transformOut(value) {\n    return props.returnObject ? value.map(function (_ref) {\n      var raw = _ref.raw;\n      return raw;\n    }) : value.map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n  }\n  return {\n    items: items,\n    transformIn: transformIn,\n    transformOut: transformOut\n  };\n}","map":{"version":3,"names":["computed","deepEqual","getPropertyFromItem","omit","propsFactory","makeItemsProps","items","type","Array","_default","itemTitle","String","Function","itemValue","itemChildren","Boolean","itemProps","returnObject","valueComparator","transformItem","props","item","_props$title","title","value","children","_typeof","isArray","undefined","_props","_objectSpread","transformItems","raw","array","_iterator","_createForOfIteratorHelper","_step","s","n","done","push","err","e","f","useItems","hasNullItem","some","transformIn","filter","v","map","find","transformOut","_ref","_ref2"],"sources":["../../src/composables/list-items.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { deepEqual, getPropertyFromItem, omit, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalItem } from '@/composables/filter'\nimport type { SelectItemKey } from '@/util'\n\nexport interface ListItem<T = any> extends InternalItem<T> {\n  title: string\n  props: {\n    [key: string]: any\n    title: string\n    value: any\n  }\n  children?: ListItem<T>[]\n}\n\nexport interface ItemProps {\n  items: any[]\n  itemTitle: SelectItemKey\n  itemValue: SelectItemKey\n  itemChildren: SelectItemKey\n  itemProps: SelectItemKey\n  returnObject: boolean\n  valueComparator: typeof deepEqual\n}\n\n// Composables\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array as PropType<ItemProps['items']>,\n    default: () => ([]),\n  },\n  itemTitle: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'title',\n  },\n  itemValue: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'value',\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'children',\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'props',\n  },\n  returnObject: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n}, 'list-items')\n\nexport function transformItem (props: Omit<ItemProps, 'items'>, item: any): ListItem {\n  const title = getPropertyFromItem(item, props.itemTitle, item)\n  const value = getPropertyFromItem(item, props.itemValue, title)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? typeof item === 'object' && item != null && !Array.isArray(item)\n      ? 'children' in item\n        ? omit(item, ['children'])\n        : item\n      : undefined\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    title: String(_props.title ?? ''),\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nexport function transformItems (props: Omit<ItemProps, 'items'>, items: ItemProps['items']) {\n  const array: ListItem[] = []\n\n  for (const item of items) {\n    array.push(transformItem(props, item))\n  }\n\n  return array\n}\n\nexport function useItems (props: ItemProps) {\n  const items = computed(() => transformItems(props, props.items))\n  const hasNullItem = computed(() => items.value.some(item => item.value === null))\n\n  function transformIn (value: any[]): ListItem[] {\n    if (!hasNullItem.value) {\n      // When the model value is null, return an InternalItem\n      // based on null only if null is one of the items\n      value = value.filter(v => v !== null)\n    }\n\n    return value.map(v => {\n      if (props.returnObject && typeof v === 'string') {\n        // String model value means value is a custom input value from combobox\n        // Don't look up existing items if the model value is a string\n        return transformItem(props, v)\n      }\n      return items.value.find(item => props.valueComparator(v, item.value)) || transformItem(props, v)\n    })\n  }\n\n  function transformOut (value: ListItem[]): any[] {\n    return props.returnObject\n      ? value.map(({ raw }) => raw)\n      : value.map(({ value }) => value)\n  }\n\n  return { items, transformIn, transformOut }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}