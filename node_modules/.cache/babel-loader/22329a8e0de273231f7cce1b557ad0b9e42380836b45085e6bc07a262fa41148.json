{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { mergeProps as _mergeProps, Fragment as _Fragment, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VBreadcrumbs.css\";\n\n// Components\nimport { VBreadcrumbsDivider } from \"./VBreadcrumbsDivider.mjs\";\nimport { VBreadcrumbsItem } from \"./VBreadcrumbsItem.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVBreadcrumbsProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    \"default\": '/'\n  },\n  icon: IconValue,\n  items: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  }\n}, makeComponentProps()), makeDensityProps()), makeRoundedProps()), makeTagProps({\n  tag: 'ul'\n})), 'VBreadcrumbs');\nexport var VBreadcrumbs = genericComponent()({\n  name: 'VBreadcrumbs',\n  props: makeVBreadcrumbsProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useBackgroundColor = useBackgroundColor(toRef(props, 'bgColor')),\n      backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n      backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n    var _useDensity = useDensity(props),\n      densityClasses = _useDensity.densityClasses;\n    var _useRounded = useRounded(props),\n      roundedClasses = _useRounded.roundedClasses;\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider')\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled')\n      }\n    });\n    var items = computed(function () {\n      return props.items.map(function (item) {\n        return typeof item === 'string' ? {\n          item: {\n            title: item\n          },\n          raw: item\n        } : {\n          item: item,\n          raw: item\n        };\n      });\n    });\n    useRender(function () {\n      var hasPrepend = !!(slots.prepend || props.icon);\n      return _createVNode(props.tag, {\n        \"class\": ['v-breadcrumbs', backgroundColorClasses.value, densityClasses.value, roundedClasses.value, props[\"class\"]],\n        \"style\": [backgroundColorStyles.value, props.style]\n      }, {\n        \"default\": function _default() {\n          var _slots$default;\n          return [hasPrepend && _createVNode(\"li\", {\n            \"key\": \"prepend\",\n            \"class\": \"v-breadcrumbs__prepend\"\n          }, [!slots.prepend ? _createVNode(VIcon, {\n            \"key\": \"prepend-icon\",\n            \"start\": true,\n            \"icon\": props.icon\n          }, null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"prepend-defaults\",\n            \"disabled\": !props.icon,\n            \"defaults\": {\n              VIcon: {\n                icon: props.icon,\n                start: true\n              }\n            }\n          }, slots.prepend)]), items.value.map(function (_ref2, index, array) {\n            var _slots$item, _slots$item2;\n            var item = _ref2.item,\n              raw = _ref2.raw;\n            return _createVNode(_Fragment, null, [(_slots$item = (_slots$item2 = slots.item) === null || _slots$item2 === void 0 ? void 0 : _slots$item2.call(slots, {\n              item: item,\n              index: index\n            })) !== null && _slots$item !== void 0 ? _slots$item : _createVNode(VBreadcrumbsItem, _mergeProps({\n              \"key\": index,\n              \"disabled\": index >= array.length - 1\n            }, typeof item === 'string' ? {\n              title: item\n            } : item), {\n              \"default\": slots.title ? function () {\n                var _slots$title;\n                return (_slots$title = slots.title) === null || _slots$title === void 0 ? void 0 : _slots$title.call(slots, {\n                  item: item,\n                  index: index\n                });\n              } : undefined\n            }), index < array.length - 1 && _createVNode(VBreadcrumbsDivider, null, {\n              \"default\": slots.divider ? function () {\n                var _slots$divider;\n                return (_slots$divider = slots.divider) === null || _slots$divider === void 0 ? void 0 : _slots$divider.call(slots, {\n                  item: raw,\n                  index: index\n                });\n              } : undefined\n            })]);\n          }), (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VBreadcrumbsDivider","VBreadcrumbsItem","VDefaultsProvider","VIcon","useBackgroundColor","makeComponentProps","provideDefaults","makeDensityProps","useDensity","IconValue","makeRoundedProps","useRounded","makeTagProps","computed","toRef","genericComponent","propsFactory","useRender","makeVBreadcrumbsProps","_objectSpread","activeClass","String","activeColor","bgColor","color","disabled","Boolean","divider","type","icon","items","Array","_default","tag","VBreadcrumbs","name","props","setup","_ref","slots","_useBackgroundColor","backgroundColorClasses","backgroundColorStyles","_useDensity","densityClasses","_useRounded","roundedClasses","map","item","title","raw","hasPrepend","prepend","_createVNode","value","style","_slots$default","start","_ref2","index","array","_slots$item","_slots$item2","_Fragment","call","_mergeProps","length","_slots$title","undefined","_slots$divider"],"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.tsx"],"sourcesContent":["// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport { VBreadcrumbsDivider } from './VBreadcrumbsDivider'\nimport { VBreadcrumbsItem } from './VBreadcrumbsItem'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { LinkProps } from '@/composables/router'\nimport type { GenericProps } from '@/util'\n\nexport type BreadcrumbItem = string | (Partial<LinkProps> & {\n  title: string\n  disabled?: boolean\n})\n\nexport const makeVBreadcrumbsProps = propsFactory({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    default: '/',\n  },\n  icon: IconValue,\n  items: {\n    type: Array as PropType<readonly BreadcrumbItem[]>,\n    default: () => ([]),\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'ul' }),\n}, 'VBreadcrumbs')\n\nexport const VBreadcrumbs = genericComponent<new <T extends BreadcrumbItem>(\n  props: {\n    items?: T[]\n  },\n  slots: {\n    prepend: never\n    title: { item: T, index: number }\n    divider: { item: T, index: number }\n    item: { item: T, index: number }\n    default: never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VBreadcrumbs',\n\n  props: makeVBreadcrumbsProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider'),\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n      },\n    })\n\n    const items = computed(() => props.items.map(item => {\n      return typeof item === 'string' ? { item: { title: item }, raw: item } : { item, raw: item }\n    }))\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.icon)\n\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs',\n            backgroundColorClasses.value,\n            densityClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasPrepend && (\n            <li key=\"prepend\" class=\"v-breadcrumbs__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  start\n                  icon={ props.icon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.icon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.icon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </li>\n          )}\n\n          { items.value.map(({ item, raw }, index, array) => (\n            <>\n              { slots.item?.({ item, index }) ?? (\n                <VBreadcrumbsItem\n                  key={ index }\n                  disabled={ index >= array.length - 1 }\n                  { ...(typeof item === 'string' ? { title: item } : item) }\n                  v-slots={{\n                    default: slots.title ? () => slots.title?.({ item, index }) : undefined,\n                  }}\n                />\n              )}\n\n              { index < array.length - 1 && (\n                <VBreadcrumbsDivider\n                  v-slots={{\n                    default: slots.divider ? () => slots.divider?.({ item: raw, index }) : undefined,\n                  }}\n                />\n              )}\n            </>\n          ))}\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbs = InstanceType<typeof VBreadcrumbs>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}