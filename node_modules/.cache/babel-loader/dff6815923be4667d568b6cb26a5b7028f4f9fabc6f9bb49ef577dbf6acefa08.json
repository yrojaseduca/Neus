{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/neus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VColorPickerCanvas.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\"; // Utilities\nimport { computed, onMounted, ref, shallowRef, watch } from 'vue';\nimport { clamp, convertToUnit, defineComponent, getEventCoordinates, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVColorPickerCanvasProps = propsFactory(_objectSpread({\n  color: {\n    type: Object\n  },\n  disabled: Boolean,\n  dotSize: {\n    type: [Number, String],\n    \"default\": 10\n  },\n  height: {\n    type: [Number, String],\n    \"default\": 150\n  },\n  width: {\n    type: [Number, String],\n    \"default\": 300\n  }\n}, makeComponentProps()), 'VColorPickerCanvas');\nexport var VColorPickerCanvas = defineComponent({\n  name: 'VColorPickerCanvas',\n  props: makeVColorPickerCanvasProps(),\n  emits: {\n    'update:color': function updateColor(color) {\n      return true;\n    },\n    'update:position': function updatePosition(hue) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var isInteracting = shallowRef(false);\n    var canvasRef = ref();\n    var canvasWidth = shallowRef(parseFloat(props.width));\n    var canvasHeight = shallowRef(parseFloat(props.height));\n    var _dotPosition = ref({\n      x: 0,\n      y: 0\n    });\n    var dotPosition = computed({\n      get: function get() {\n        return _dotPosition.value;\n      },\n      set: function set(val) {\n        var _props$color$h, _props$color, _props$color$a, _props$color2;\n        if (!canvasRef.value) return;\n        var x = val.x,\n          y = val.y;\n        _dotPosition.value = val;\n        emit('update:color', {\n          h: (_props$color$h = (_props$color = props.color) === null || _props$color === void 0 ? void 0 : _props$color.h) !== null && _props$color$h !== void 0 ? _props$color$h : 0,\n          s: clamp(x, 0, canvasWidth.value) / canvasWidth.value,\n          v: 1 - clamp(y, 0, canvasHeight.value) / canvasHeight.value,\n          a: (_props$color$a = (_props$color2 = props.color) === null || _props$color2 === void 0 ? void 0 : _props$color2.a) !== null && _props$color$a !== void 0 ? _props$color$a : 1\n        });\n      }\n    });\n    var dotStyles = computed(function () {\n      var _dotPosition$value = dotPosition.value,\n        x = _dotPosition$value.x,\n        y = _dotPosition$value.y;\n      var radius = parseInt(props.dotSize, 10) / 2;\n      return {\n        width: convertToUnit(props.dotSize),\n        height: convertToUnit(props.dotSize),\n        transform: \"translate(\".concat(convertToUnit(x - radius), \", \").concat(convertToUnit(y - radius), \")\")\n      };\n    });\n    var _useResizeObserver = useResizeObserver(function (entries) {\n        var _resizeRef$value;\n        if (!((_resizeRef$value = resizeRef.value) !== null && _resizeRef$value !== void 0 && _resizeRef$value.offsetParent)) return;\n        var _entries$0$contentRec = entries[0].contentRect,\n          width = _entries$0$contentRec.width,\n          height = _entries$0$contentRec.height;\n        canvasWidth.value = width;\n        canvasHeight.value = height;\n      }),\n      resizeRef = _useResizeObserver.resizeRef;\n    function updateDotPosition(x, y, rect) {\n      var left = rect.left,\n        top = rect.top,\n        width = rect.width,\n        height = rect.height;\n      dotPosition.value = {\n        x: clamp(x - left, 0, width),\n        y: clamp(y - top, 0, height)\n      };\n    }\n    function handleMouseDown(e) {\n      if (e.type === 'mousedown') {\n        // Prevent text selection while dragging\n        e.preventDefault();\n      }\n      if (props.disabled) return;\n      handleMouseMove(e);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n    }\n    function handleMouseMove(e) {\n      if (props.disabled || !canvasRef.value) return;\n      isInteracting.value = true;\n      var coords = getEventCoordinates(e);\n      updateDotPosition(coords.clientX, coords.clientY, canvasRef.value.getBoundingClientRect());\n    }\n    function handleMouseUp() {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n    }\n    function updateCanvas() {\n      var _props$color$h2, _props$color3;\n      if (!canvasRef.value) return;\n      var canvas = canvasRef.value;\n      var ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      var saturationGradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n      saturationGradient.addColorStop(0, 'hsla(0, 0%, 100%, 1)'); // white\n      saturationGradient.addColorStop(1, \"hsla(\".concat((_props$color$h2 = (_props$color3 = props.color) === null || _props$color3 === void 0 ? void 0 : _props$color3.h) !== null && _props$color$h2 !== void 0 ? _props$color$h2 : 0, \", 100%, 50%, 1)\"));\n      ctx.fillStyle = saturationGradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      var valueGradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n      valueGradient.addColorStop(0, 'hsla(0, 0%, 100%, 0)'); // transparent\n      valueGradient.addColorStop(1, 'hsla(0, 0%, 0%, 1)'); // black\n      ctx.fillStyle = valueGradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    watch(function () {\n      var _props$color4;\n      return (_props$color4 = props.color) === null || _props$color4 === void 0 ? void 0 : _props$color4.h;\n    }, updateCanvas, {\n      immediate: true\n    });\n    watch(function () {\n      return [canvasWidth.value, canvasHeight.value];\n    }, function (newVal, oldVal) {\n      updateCanvas();\n      _dotPosition.value = {\n        x: dotPosition.value.x * newVal[0] / oldVal[0],\n        y: dotPosition.value.y * newVal[1] / oldVal[1]\n      };\n    }, {\n      flush: 'post'\n    });\n    watch(function () {\n      return props.color;\n    }, function () {\n      if (isInteracting.value) {\n        isInteracting.value = false;\n        return;\n      }\n      _dotPosition.value = props.color ? {\n        x: props.color.s * canvasWidth.value,\n        y: (1 - props.color.v) * canvasHeight.value\n      } : {\n        x: 0,\n        y: 0\n      };\n    }, {\n      deep: true,\n      immediate: true\n    });\n    onMounted(function () {\n      return updateCanvas();\n    });\n    useRender(function () {\n      return _createVNode(\"div\", {\n        \"ref\": resizeRef,\n        \"class\": ['v-color-picker-canvas', props[\"class\"]],\n        \"style\": props.style,\n        \"onMousedown\": handleMouseDown,\n        \"onTouchstartPassive\": handleMouseDown\n      }, [_createVNode(\"canvas\", {\n        \"ref\": canvasRef,\n        \"width\": canvasWidth.value,\n        \"height\": canvasHeight.value\n      }, null), props.color && _createVNode(\"div\", {\n        \"class\": ['v-color-picker-canvas__dot', {\n          'v-color-picker-canvas__dot--disabled': props.disabled\n        }],\n        \"style\": dotStyles.value\n      }, null)]);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["makeComponentProps","useResizeObserver","computed","onMounted","ref","shallowRef","watch","clamp","convertToUnit","defineComponent","getEventCoordinates","propsFactory","useRender","makeVColorPickerCanvasProps","_objectSpread","color","type","Object","disabled","Boolean","dotSize","Number","String","height","width","VColorPickerCanvas","name","props","emits","updateColor","updatePosition","hue","setup","_ref","emit","isInteracting","canvasRef","canvasWidth","parseFloat","canvasHeight","_dotPosition","x","y","dotPosition","get","value","set","val","_props$color$h","_props$color","_props$color$a","_props$color2","h","s","v","a","dotStyles","_dotPosition$value","radius","parseInt","transform","concat","_useResizeObserver","entries","_resizeRef$value","resizeRef","offsetParent","_entries$0$contentRec","contentRect","updateDotPosition","rect","left","top","handleMouseDown","e","preventDefault","handleMouseMove","window","addEventListener","handleMouseUp","coords","clientX","clientY","getBoundingClientRect","removeEventListener","updateCanvas","_props$color$h2","_props$color3","canvas","ctx","getContext","saturationGradient","createLinearGradient","addColorStop","fillStyle","fillRect","valueGradient","_props$color4","immediate","newVal","oldVal","flush","deep","_createVNode","style"],"sources":["../../../src/components/VColorPicker/VColorPickerCanvas.tsx"],"sourcesContent":["// Styles\nimport './VColorPickerCanvas.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, onMounted, ref, shallowRef, watch } from 'vue'\nimport { clamp, convertToUnit, defineComponent, getEventCoordinates, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { HSV } from '@/util'\n\nexport const makeVColorPickerCanvasProps = propsFactory({\n  color: {\n    type: Object as PropType<HSV | null>,\n  },\n  disabled: Boolean,\n  dotSize: {\n    type: [Number, String],\n    default: 10,\n  },\n  height: {\n    type: [Number, String],\n    default: 150,\n  },\n  width: {\n    type: [Number, String],\n    default: 300,\n  },\n\n  ...makeComponentProps(),\n}, 'VColorPickerCanvas')\n\nexport const VColorPickerCanvas = defineComponent({\n  name: 'VColorPickerCanvas',\n\n  props: makeVColorPickerCanvasProps(),\n\n  emits: {\n    'update:color': (color: HSV) => true,\n    'update:position': (hue: any) => true,\n  },\n\n  setup (props, { emit }) {\n    const isInteracting = shallowRef(false)\n    const canvasRef = ref<HTMLCanvasElement | null>()\n    const canvasWidth = shallowRef(parseFloat(props.width))\n    const canvasHeight = shallowRef(parseFloat(props.height))\n\n    const _dotPosition = ref({ x: 0, y: 0 })\n    const dotPosition = computed({\n      get: () => _dotPosition.value,\n      set (val) {\n        if (!canvasRef.value) return\n\n        const { x, y } = val\n        _dotPosition.value = val\n\n        emit('update:color', {\n          h: props.color?.h ?? 0,\n          s: clamp(x, 0, canvasWidth.value) / canvasWidth.value,\n          v: 1 - clamp(y, 0, canvasHeight.value) / canvasHeight.value,\n          a: props.color?.a ?? 1,\n        })\n      },\n    })\n\n    const dotStyles = computed(() => {\n      const { x, y } = dotPosition.value\n      const radius = parseInt(props.dotSize, 10) / 2\n\n      return {\n        width: convertToUnit(props.dotSize),\n        height: convertToUnit(props.dotSize),\n        transform: `translate(${convertToUnit(x - radius)}, ${convertToUnit(y - radius)})`,\n      }\n    })\n\n    const { resizeRef } = useResizeObserver(entries => {\n      if (!resizeRef.value?.offsetParent) return\n\n      const { width, height } = entries[0].contentRect\n\n      canvasWidth.value = width\n      canvasHeight.value = height\n    })\n\n    function updateDotPosition (x: number, y: number, rect: DOMRect) {\n      const { left, top, width, height } = rect\n      dotPosition.value = {\n        x: clamp(x - left, 0, width),\n        y: clamp(y - top, 0, height),\n      }\n    }\n\n    function handleMouseDown (e: MouseEvent | TouchEvent) {\n      if (e.type === 'mousedown') {\n        // Prevent text selection while dragging\n        e.preventDefault()\n      }\n\n      if (props.disabled) return\n\n      handleMouseMove(e)\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n      window.addEventListener('touchmove', handleMouseMove)\n      window.addEventListener('touchend', handleMouseUp)\n    }\n\n    function handleMouseMove (e: MouseEvent | TouchEvent) {\n      if (props.disabled || !canvasRef.value) return\n\n      isInteracting.value = true\n\n      const coords = getEventCoordinates(e)\n\n      updateDotPosition(coords.clientX, coords.clientY, canvasRef.value.getBoundingClientRect())\n    }\n\n    function handleMouseUp () {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n      window.removeEventListener('touchmove', handleMouseMove)\n      window.removeEventListener('touchend', handleMouseUp)\n    }\n\n    function updateCanvas () {\n      if (!canvasRef.value) return\n\n      const canvas = canvasRef.value\n      const ctx = canvas.getContext('2d')\n\n      if (!ctx) return\n\n      const saturationGradient = ctx.createLinearGradient(0, 0, canvas.width, 0)\n      saturationGradient.addColorStop(0, 'hsla(0, 0%, 100%, 1)') // white\n      saturationGradient.addColorStop(1, `hsla(${props.color?.h ?? 0}, 100%, 50%, 1)`)\n      ctx.fillStyle = saturationGradient\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n      const valueGradient = ctx.createLinearGradient(0, 0, 0, canvas.height)\n      valueGradient.addColorStop(0, 'hsla(0, 0%, 100%, 0)') // transparent\n      valueGradient.addColorStop(1, 'hsla(0, 0%, 0%, 1)') // black\n      ctx.fillStyle = valueGradient\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    watch(() => props.color?.h, updateCanvas, { immediate: true })\n    watch(() => [canvasWidth.value, canvasHeight.value], (newVal, oldVal) => {\n      updateCanvas()\n      _dotPosition.value = {\n        x: dotPosition.value.x * newVal[0] / oldVal[0],\n        y: dotPosition.value.y * newVal[1] / oldVal[1],\n      }\n    }, { flush: 'post' })\n\n    watch(() => props.color, () => {\n      if (isInteracting.value) {\n        isInteracting.value = false\n        return\n      }\n\n      _dotPosition.value = props.color ? {\n        x: props.color.s * canvasWidth.value,\n        y: (1 - props.color.v) * canvasHeight.value,\n      } : { x: 0, y: 0 }\n    }, { deep: true, immediate: true })\n\n    onMounted(() => updateCanvas())\n\n    useRender(() => (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-color-picker-canvas',\n          props.class,\n        ]}\n        style={ props.style }\n        onMousedown={ handleMouseDown }\n        onTouchstartPassive={ handleMouseDown }\n      >\n        <canvas\n          ref={ canvasRef }\n          width={ canvasWidth.value }\n          height={ canvasHeight.value }\n        />\n        { props.color && (\n          <div\n            class={[\n              'v-color-picker-canvas__dot',\n              {\n                'v-color-picker-canvas__dot--disabled': props.disabled,\n              },\n            ]}\n            style={ dotStyles.value }\n          />\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VColorPickerCanvas = InstanceType<typeof VColorPickerCanvas>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}