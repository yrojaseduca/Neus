{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport { createTextVNode as _createTextVNode, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VDataTableColumn } from \"./VDataTableColumn.mjs\";\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\"; // Composables\nimport { useGroupBy } from \"./composables/group.mjs\";\nimport { useHeaders } from \"./composables/headers.mjs\";\nimport { useSelection } from \"./composables/select.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nexport var makeVDataTableGroupHeaderRowProps = propsFactory({\n  item: {\n    type: Object,\n    required: true\n  }\n}, 'VDataTableGroupHeaderRow');\nexport var VDataTableGroupHeaderRow = genericComponent()({\n  name: 'VDataTableGroupHeaderRow',\n  props: makeVDataTableGroupHeaderRowProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useGroupBy = useGroupBy(),\n      isGroupOpen = _useGroupBy.isGroupOpen,\n      toggleGroup = _useGroupBy.toggleGroup,\n      extractRows = _useGroupBy.extractRows;\n    var _useSelection = useSelection(),\n      isSelected = _useSelection.isSelected,\n      isSomeSelected = _useSelection.isSomeSelected,\n      select = _useSelection.select;\n    var _useHeaders = useHeaders(),\n      columns = _useHeaders.columns;\n    var rows = computed(function () {\n      return extractRows([props.item]);\n    });\n    return function () {\n      return _createVNode(\"tr\", {\n        \"class\": \"v-data-table-group-header-row\",\n        \"style\": {\n          '--v-data-table-group-header-row-depth': props.item.depth\n        }\n      }, [columns.value.map(function (column) {\n        if (column.key === 'data-table-group') {\n          var _slots$dataTableGro, _slots$dataTableGro2;\n          var icon = isGroupOpen(props.item) ? '$expand' : '$next';\n          var onClick = function onClick() {\n            return toggleGroup(props.item);\n          };\n          return (_slots$dataTableGro = (_slots$dataTableGro2 = slots['data-table-group']) === null || _slots$dataTableGro2 === void 0 ? void 0 : _slots$dataTableGro2.call(slots, {\n            item: props.item,\n            count: rows.value.length,\n            props: {\n              icon: icon,\n              onClick: onClick\n            }\n          })) !== null && _slots$dataTableGro !== void 0 ? _slots$dataTableGro : _createVNode(VDataTableColumn, {\n            \"class\": \"v-data-table-group-header-row__column\"\n          }, {\n            \"default\": function _default() {\n              return [_createVNode(VBtn, {\n                \"size\": \"small\",\n                \"variant\": \"text\",\n                \"icon\": icon,\n                \"onClick\": onClick\n              }, null), _createVNode(\"span\", null, [props.item.value]), _createVNode(\"span\", null, [_createTextVNode(\"(\"), rows.value.length, _createTextVNode(\")\")])];\n            }\n          });\n        }\n        if (column.key === 'data-table-select') {\n          var _slots$dataTableSel, _slots$dataTableSel2;\n          var modelValue = isSelected(rows.value);\n          var indeterminate = isSomeSelected(rows.value) && !modelValue;\n          var selectGroup = function selectGroup(v) {\n            return select(rows.value, v);\n          };\n          return (_slots$dataTableSel = (_slots$dataTableSel2 = slots['data-table-select']) === null || _slots$dataTableSel2 === void 0 ? void 0 : _slots$dataTableSel2.call(slots, {\n            props: {\n              modelValue: modelValue,\n              indeterminate: indeterminate,\n              'onUpdate:modelValue': selectGroup\n            }\n          })) !== null && _slots$dataTableSel !== void 0 ? _slots$dataTableSel : _createVNode(\"td\", null, [_createVNode(VCheckboxBtn, {\n            \"modelValue\": modelValue,\n            \"indeterminate\": indeterminate,\n            \"onUpdate:modelValue\": selectGroup\n          }, null)]);\n        }\n        return _createVNode(\"td\", null, null);\n      })]);\n    };\n  }\n});","map":{"version":3,"names":["VDataTableColumn","VBtn","VCheckboxBtn","useGroupBy","useHeaders","useSelection","computed","genericComponent","propsFactory","makeVDataTableGroupHeaderRowProps","item","type","Object","required","VDataTableGroupHeaderRow","name","props","setup","_ref","slots","_useGroupBy","isGroupOpen","toggleGroup","extractRows","_useSelection","isSelected","isSomeSelected","select","_useHeaders","columns","rows","_createVNode","depth","value","map","column","key","_slots$dataTableGro","_slots$dataTableGro2","icon","onClick","call","count","length","_default","_createTextVNode","_slots$dataTableSel","_slots$dataTableSel2","modelValue","indeterminate","selectGroup","v"],"sources":["../../../src/components/VDataTable/VDataTableGroupHeaderRow.tsx"],"sourcesContent":["// Components\nimport { VDataTableColumn } from './VDataTableColumn'\nimport { VBtn } from '@/components/VBtn'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\n\n// Composables\nimport { useGroupBy } from './composables/group'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { Group } from './composables/group'\n\nexport type VDataTableGroupHeaderRowSlots = {\n  'data-table-group': { item: Group, count: number, props: Record<string, unknown> }\n  'data-table-select': { props: Record<string, unknown> }\n}\n\nexport const makeVDataTableGroupHeaderRowProps = propsFactory({\n  item: {\n    type: Object as PropType<Group>,\n    required: true,\n  },\n}, 'VDataTableGroupHeaderRow')\n\nexport const VDataTableGroupHeaderRow = genericComponent<VDataTableGroupHeaderRowSlots>()({\n  name: 'VDataTableGroupHeaderRow',\n\n  props: makeVDataTableGroupHeaderRowProps(),\n\n  setup (props, { slots }) {\n    const { isGroupOpen, toggleGroup, extractRows } = useGroupBy()\n    const { isSelected, isSomeSelected, select } = useSelection()\n    const { columns } = useHeaders()\n\n    const rows = computed(() => {\n      return extractRows([props.item])\n    })\n\n    return () => (\n      <tr\n        class=\"v-data-table-group-header-row\"\n        style={{\n          '--v-data-table-group-header-row-depth': props.item.depth,\n        }}\n      >\n        { columns.value.map(column => {\n          if (column.key === 'data-table-group') {\n            const icon = isGroupOpen(props.item) ? '$expand' : '$next'\n            const onClick = () => toggleGroup(props.item)\n\n            return slots['data-table-group']?.({ item: props.item, count: rows.value.length, props: { icon, onClick } }) ?? (\n              <VDataTableColumn class=\"v-data-table-group-header-row__column\">\n                <VBtn\n                  size=\"small\"\n                  variant=\"text\"\n                  icon={ icon }\n                  onClick={ onClick }\n                />\n                <span>{ props.item.value }</span>\n                <span>({ rows.value.length })</span>\n              </VDataTableColumn>\n            )\n          }\n\n          if (column.key === 'data-table-select') {\n            const modelValue = isSelected(rows.value)\n            const indeterminate = isSomeSelected(rows.value) && !modelValue\n            const selectGroup = (v: boolean) => select(rows.value, v)\n            return slots['data-table-select']?.({ props: { modelValue, indeterminate, 'onUpdate:modelValue': selectGroup } }) ?? (\n              <td>\n                <VCheckboxBtn\n                  modelValue={ modelValue }\n                  indeterminate={ indeterminate }\n                  onUpdate:modelValue={ selectGroup }\n                />\n              </td>\n            )\n          }\n\n          return <td />\n        })}\n      </tr>\n    )\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}